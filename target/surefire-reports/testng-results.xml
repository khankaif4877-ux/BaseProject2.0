<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="84" passed="80" failed="0" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-26T17:50:32 IST" name="Suite" finished-at="2025-09-26T17:54:08 IST" duration-ms="215870">
    <groups>
      <group name="reg">
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@2b6faea6]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@2b6faea6]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@75329a49]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@75329a49]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@7c469c48]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@7c469c48]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@161479c6]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@161479c6]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@5e316c74]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@5e316c74]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@6d2a209c]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@6d2a209c]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@10e41621]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@10e41621]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@e056f20]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@e056f20]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@5bd03f44]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@5bd03f44]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@29626d54]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@29626d54]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@5a63f509]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@5a63f509]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- reg -->
      <group name="smoke">
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@2b6faea6]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@75329a49]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@7c469c48]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@161479c6]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@5e316c74]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@6d2a209c]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@10e41621]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@e056f20]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@5bd03f44]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@29626d54]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@5a63f509]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-09-26T17:50:32 IST" name="edgeSuit" finished-at="2025-09-26T17:52:38 IST" duration-ms="125897">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:47 IST" name="beforeClassMethod" finished-at="2025-09-26T17:50:48 IST" duration-ms="1588" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:48 IST" name="beforeMethod" finished-at="2025-09-26T17:50:51 IST" duration-ms="2371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:51 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:50:51 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:51 IST" name="afterMethod" finished-at="2025-09-26T17:50:53 IST" duration-ms="1854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:53 IST" name="beforeMethod" finished-at="2025-09-26T17:50:54 IST" duration-ms="1487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:54 IST" name="firstScenarioTest" finished-at="2025-09-26T17:50:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:54 IST" name="afterMethod" finished-at="2025-09-26T17:50:56 IST" duration-ms="1972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:56 IST" name="beforeMethod" finished-at="2025-09-26T17:50:57 IST" duration-ms="1326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:57 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:50:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:57 IST" name="afterMethod" finished-at="2025-09-26T17:50:59 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@5e316c74]" started-at="2025-09-26T17:50:59 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:00 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:40 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:42 IST" duration-ms="1460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:42 IST" name="beforeMethod" finished-at="2025-09-26T17:51:44 IST" duration-ms="2375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:44 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:44 IST" name="afterMethod" finished-at="2025-09-26T17:51:46 IST" duration-ms="2219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:47 IST" name="beforeMethod" finished-at="2025-09-26T17:51:49 IST" duration-ms="2074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:49 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:49 IST" name="afterMethod" finished-at="2025-09-26T17:51:51 IST" duration-ms="2089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:51 IST" name="beforeMethod" finished-at="2025-09-26T17:51:52 IST" duration-ms="1441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:52 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:52 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:52 IST" name="afterMethod" finished-at="2025-09-26T17:51:54 IST" duration-ms="2060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@4313f5bc]" started-at="2025-09-26T17:51:54 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:55 IST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:26 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:29 IST" duration-ms="3128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:29 IST" name="beforeMethod" finished-at="2025-09-26T17:51:31 IST" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:31 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:31 IST" name="afterMethod" finished-at="2025-09-26T17:51:33 IST" duration-ms="1828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:33 IST" name="beforeMethod" finished-at="2025-09-26T17:51:35 IST" duration-ms="1309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:35 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:35 IST" name="afterMethod" finished-at="2025-09-26T17:51:37 IST" duration-ms="2110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:37 IST" name="beforeMethod" finished-at="2025-09-26T17:51:38 IST" duration-ms="1341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:38 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:38 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:38 IST" name="afterMethod" finished-at="2025-09-26T17:51:40 IST" duration-ms="1946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@161479c6]" started-at="2025-09-26T17:51:40 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:40 IST" duration-ms="447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:13 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:14 IST" duration-ms="1708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:14 IST" name="beforeMethod" finished-at="2025-09-26T17:51:17 IST" duration-ms="2189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:17 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:17 IST" name="afterMethod" finished-at="2025-09-26T17:51:19 IST" duration-ms="2031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:19 IST" name="beforeMethod" finished-at="2025-09-26T17:51:20 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:20 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:20 IST" name="afterMethod" finished-at="2025-09-26T17:51:22 IST" duration-ms="2127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:22 IST" name="beforeMethod" finished-at="2025-09-26T17:51:24 IST" duration-ms="1378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:24 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:24 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:24 IST" name="afterMethod" finished-at="2025-09-26T17:51:26 IST" duration-ms="2180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@75329a49]" started-at="2025-09-26T17:51:26 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:26 IST" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:32 IST" name="beforeClassMethod" finished-at="2025-09-26T17:50:35 IST" duration-ms="2555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:35 IST" name="beforeMethod" finished-at="2025-09-26T17:50:38 IST" duration-ms="2991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:38 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:50:38 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:38 IST" name="afterMethod" finished-at="2025-09-26T17:50:39 IST" duration-ms="1342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:39 IST" name="beforeMethod" finished-at="2025-09-26T17:50:41 IST" duration-ms="1503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:41 IST" name="firstScenarioTest" finished-at="2025-09-26T17:50:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:41 IST" name="afterMethod" finished-at="2025-09-26T17:50:43 IST" duration-ms="2113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:43 IST" name="beforeMethod" finished-at="2025-09-26T17:50:44 IST" duration-ms="1321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:44 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:50:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:44 IST" name="afterMethod" finished-at="2025-09-26T17:50:46 IST" duration-ms="2113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@7c469c48]" started-at="2025-09-26T17:50:46 IST" name="afterClassMethod" finished-at="2025-09-26T17:50:47 IST" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:00 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:01 IST" duration-ms="1485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:01 IST" name="beforeMethod" finished-at="2025-09-26T17:51:03 IST" duration-ms="2153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:03 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:03 IST" name="afterMethod" finished-at="2025-09-26T17:51:05 IST" duration-ms="1975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:05 IST" name="beforeMethod" finished-at="2025-09-26T17:51:07 IST" duration-ms="1322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:07 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:07 IST" name="afterMethod" finished-at="2025-09-26T17:51:09 IST" duration-ms="2027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:09 IST" name="beforeMethod" finished-at="2025-09-26T17:51:10 IST" duration-ms="1460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:10 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:10 IST" name="afterMethod" finished-at="2025-09-26T17:51:12 IST" duration-ms="2124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@6d2a209c]" started-at="2025-09-26T17:51:12 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:13 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:25 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:27 IST" duration-ms="1542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:27 IST" name="beforeMethod" finished-at="2025-09-26T17:52:29 IST" duration-ms="1953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:29 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:29 IST" name="afterMethod" finished-at="2025-09-26T17:52:31 IST" duration-ms="2085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:31 IST" name="beforeMethod" finished-at="2025-09-26T17:52:32 IST" duration-ms="1258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:32 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:32 IST" name="afterMethod" finished-at="2025-09-26T17:52:34 IST" duration-ms="2085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:34 IST" name="beforeMethod" finished-at="2025-09-26T17:52:35 IST" duration-ms="1271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:35 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:35 IST" name="afterMethod" finished-at="2025-09-26T17:52:38 IST" duration-ms="2228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@2b6faea6]" started-at="2025-09-26T17:52:38 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:38 IST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:12 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:14 IST" duration-ms="1872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:14 IST" name="beforeMethod" finished-at="2025-09-26T17:52:16 IST" duration-ms="1909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:16 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:16 IST" name="afterMethod" finished-at="2025-09-26T17:52:18 IST" duration-ms="1856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:18 IST" name="beforeMethod" finished-at="2025-09-26T17:52:19 IST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:19 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:19 IST" name="afterMethod" finished-at="2025-09-26T17:52:21 IST" duration-ms="2322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:21 IST" name="beforeMethod" finished-at="2025-09-26T17:52:23 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:23 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:23 IST" name="afterMethod" finished-at="2025-09-26T17:52:25 IST" duration-ms="2085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@1e802ef9]" started-at="2025-09-26T17:52:25 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:25 IST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:51:55 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:56 IST" duration-ms="1487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7cd61153]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:51:56 IST" name="beforeMethod" finished-at="2025-09-26T17:51:58 IST" duration-ms="2266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:51:58 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:51:58 IST" name="afterMethod" finished-at="2025-09-26T17:52:00 IST" duration-ms="2096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:00 IST" name="beforeMethod" finished-at="2025-09-26T17:52:02 IST" duration-ms="1358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:02 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:02 IST" name="afterMethod" finished-at="2025-09-26T17:52:04 IST" duration-ms="1949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:04 IST" name="beforeMethod" finished-at="2025-09-26T17:52:05 IST" duration-ms="1333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:05 IST" name="fourthScenarioTest" finished-at="2025-09-26T17:52:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:05 IST" name="afterMethod" finished-at="2025-09-26T17:52:07 IST" duration-ms="2242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:07 IST" name="beforeMethod" finished-at="2025-09-26T17:52:10 IST" duration-ms="2208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:10 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:10 IST" name="afterMethod" finished-at="2025-09-26T17:52:12 IST" duration-ms="2315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@7f010382]" started-at="2025-09-26T17:52:12 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:12 IST" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- edgeSuit -->
    <test started-at="2025-09-26T17:50:32 IST" name="chromeSuite" finished-at="2025-09-26T17:52:41 IST" duration-ms="129085">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:48 IST" name="beforeClassMethod" finished-at="2025-09-26T17:50:50 IST" duration-ms="2098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:50 IST" name="beforeMethod" finished-at="2025-09-26T17:50:52 IST" duration-ms="2301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:52 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:50:52 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:52 IST" name="afterMethod" finished-at="2025-09-26T17:50:54 IST" duration-ms="1825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:54 IST" name="beforeMethod" finished-at="2025-09-26T17:50:55 IST" duration-ms="1183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:55 IST" name="firstScenarioTest" finished-at="2025-09-26T17:50:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:55 IST" name="afterMethod" finished-at="2025-09-26T17:50:57 IST" duration-ms="1949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:57 IST" name="beforeMethod" finished-at="2025-09-26T17:50:59 IST" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:59 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:50:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:50:59 IST" name="afterMethod" finished-at="2025-09-26T17:51:01 IST" duration-ms="1997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@67a20f67]" started-at="2025-09-26T17:51:01 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:01 IST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:44 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:46 IST" duration-ms="2279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:46 IST" name="beforeMethod" finished-at="2025-09-26T17:51:49 IST" duration-ms="2844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:49 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:49 IST" name="afterMethod" finished-at="2025-09-26T17:51:51 IST" duration-ms="2102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:51 IST" name="beforeMethod" finished-at="2025-09-26T17:51:51 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:51 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:51 IST" name="afterMethod" finished-at="2025-09-26T17:51:54 IST" duration-ms="3058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:54 IST" name="beforeMethod" finished-at="2025-09-26T17:51:56 IST" duration-ms="1360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:56 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:56 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:56 IST" name="afterMethod" finished-at="2025-09-26T17:51:58 IST" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@64cd705f]" started-at="2025-09-26T17:51:58 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:58 IST" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:30 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:32 IST" duration-ms="1877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:32 IST" name="beforeMethod" finished-at="2025-09-26T17:51:34 IST" duration-ms="1988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:34 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:34 IST" name="afterMethod" finished-at="2025-09-26T17:51:36 IST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:36 IST" name="beforeMethod" finished-at="2025-09-26T17:51:36 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:36 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:36 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:36 IST" name="afterMethod" finished-at="2025-09-26T17:51:39 IST" duration-ms="3138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:39 IST" name="beforeMethod" finished-at="2025-09-26T17:51:41 IST" duration-ms="1647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:41 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:41 IST" name="afterMethod" finished-at="2025-09-26T17:51:43 IST" duration-ms="2087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@13e39c73]" started-at="2025-09-26T17:51:43 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:44 IST" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:14 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:16 IST" duration-ms="1877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:16 IST" name="beforeMethod" finished-at="2025-09-26T17:51:18 IST" duration-ms="1878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:18 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:18 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:18 IST" name="afterMethod" finished-at="2025-09-26T17:51:20 IST" duration-ms="1964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:20 IST" name="beforeMethod" finished-at="2025-09-26T17:51:21 IST" duration-ms="1307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:21 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:21 IST" name="afterMethod" finished-at="2025-09-26T17:51:23 IST" duration-ms="2059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:23 IST" name="beforeMethod" finished-at="2025-09-26T17:51:25 IST" duration-ms="1597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:25 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:25 IST" name="afterMethod" finished-at="2025-09-26T17:51:27 IST" duration-ms="2288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" started-at="2025-09-26T17:51:27 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:30 IST" duration-ms="2652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeSuitMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:32 IST" name="beforeSuitMethod" finished-at="2025-09-26T17:50:32 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuitMethod -->
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:32 IST" name="beforeClassMethod" finished-at="2025-09-26T17:50:35 IST" duration-ms="2665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:35 IST" name="beforeMethod" finished-at="2025-09-26T17:50:38 IST" duration-ms="3223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:38 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:50:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:38 IST" name="afterMethod" finished-at="2025-09-26T17:50:40 IST" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:40 IST" name="beforeMethod" finished-at="2025-09-26T17:50:42 IST" duration-ms="1814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:42 IST" name="firstScenarioTest" finished-at="2025-09-26T17:50:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:42 IST" name="afterMethod" finished-at="2025-09-26T17:50:44 IST" duration-ms="1845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:44 IST" name="beforeMethod" finished-at="2025-09-26T17:50:45 IST" duration-ms="1709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:45 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:50:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:45 IST" name="afterMethod" finished-at="2025-09-26T17:50:47 IST" duration-ms="1987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:50:47 IST" name="afterClassMethod" finished-at="2025-09-26T17:50:48 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
        <test-method is-config="true" signature="afterSuitMethod()[pri:0, instance:module02.ClassOneTest@2667f029]" started-at="2025-09-26T17:54:08 IST" name="afterSuitMethod" finished-at="2025-09-26T17:54:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuitMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:01 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:03 IST" duration-ms="1959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:03 IST" name="beforeMethod" finished-at="2025-09-26T17:51:05 IST" duration-ms="2226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:05 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:05 IST" name="afterMethod" finished-at="2025-09-26T17:51:07 IST" duration-ms="1702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:07 IST" name="beforeMethod" finished-at="2025-09-26T17:51:08 IST" duration-ms="1197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:08 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:08 IST" name="afterMethod" finished-at="2025-09-26T17:51:10 IST" duration-ms="2020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:10 IST" name="beforeMethod" finished-at="2025-09-26T17:51:11 IST" duration-ms="1271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:11 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:11 IST" name="afterMethod" finished-at="2025-09-26T17:51:13 IST" duration-ms="1927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@57c758ac]" started-at="2025-09-26T17:51:13 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:14 IST" duration-ms="891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:29 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:30 IST" duration-ms="1525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:30 IST" name="beforeMethod" finished-at="2025-09-26T17:52:32 IST" duration-ms="2031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:32 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:32 IST" name="afterMethod" finished-at="2025-09-26T17:52:34 IST" duration-ms="2064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:34 IST" name="beforeMethod" finished-at="2025-09-26T17:52:34 IST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:34 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:34 IST" name="afterMethod" finished-at="2025-09-26T17:52:38 IST" duration-ms="3195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:38 IST" name="beforeMethod" finished-at="2025-09-26T17:52:39 IST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:39 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:39 IST" name="afterMethod" finished-at="2025-09-26T17:52:41 IST" duration-ms="2042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@6a400542]" started-at="2025-09-26T17:52:41 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:41 IST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:16 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:18 IST" duration-ms="1542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:18 IST" name="beforeMethod" finished-at="2025-09-26T17:52:19 IST" duration-ms="1880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:19 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:19 IST" name="afterMethod" finished-at="2025-09-26T17:52:21 IST" duration-ms="2062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:21 IST" name="beforeMethod" finished-at="2025-09-26T17:52:23 IST" duration-ms="1378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:23 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:23 IST" name="afterMethod" finished-at="2025-09-26T17:52:25 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:25 IST" name="beforeMethod" finished-at="2025-09-26T17:52:26 IST" duration-ms="1362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:26 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:26 IST" name="afterMethod" finished-at="2025-09-26T17:52:28 IST" duration-ms="1930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" started-at="2025-09-26T17:52:28 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:29 IST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:51:58 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:00 IST" duration-ms="1539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@44a83042]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:00 IST" name="beforeMethod" finished-at="2025-09-26T17:52:02 IST" duration-ms="2035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:02 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:02 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:02 IST" name="afterMethod" finished-at="2025-09-26T17:52:04 IST" duration-ms="1986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:04 IST" name="beforeMethod" finished-at="2025-09-26T17:52:05 IST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:05 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:05 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:05 IST" name="afterMethod" finished-at="2025-09-26T17:52:07 IST" duration-ms="2253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:07 IST" name="beforeMethod" finished-at="2025-09-26T17:52:10 IST" duration-ms="2282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:10 IST" name="fourthScenarioTest" finished-at="2025-09-26T17:52:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:10 IST" name="afterMethod" finished-at="2025-09-26T17:52:12 IST" duration-ms="2294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:12 IST" name="beforeMethod" finished-at="2025-09-26T17:52:14 IST" duration-ms="1675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:14 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:14 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:14 IST" name="afterMethod" finished-at="2025-09-26T17:52:15 IST" duration-ms="1862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@9225652]" started-at="2025-09-26T17:52:15 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:16 IST" duration-ms="556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- chromeSuite -->
    <test started-at="2025-09-26T17:50:32 IST" name="firefoxSuite" finished-at="2025-09-26T17:54:08 IST" duration-ms="215870">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:21 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:26 IST" duration-ms="4941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:26 IST" name="beforeMethod" finished-at="2025-09-26T17:51:26 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:26 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:26 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:26 IST" name="afterMethod" finished-at="2025-09-26T17:51:31 IST" duration-ms="4962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:31 IST" name="beforeMethod" finished-at="2025-09-26T17:51:31 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:31 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:32 IST" name="afterMethod" finished-at="2025-09-26T17:51:34 IST" duration-ms="2080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:34 IST" name="beforeMethod" finished-at="2025-09-26T17:51:34 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:34 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:34 IST" name="afterMethod" finished-at="2025-09-26T17:51:37 IST" duration-ms="3691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@29626d54]" started-at="2025-09-26T17:51:37 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:40 IST" duration-ms="2780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:52:51 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:55 IST" duration-ms="4357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:52:55 IST" name="beforeMethod" finished-at="2025-09-26T17:52:55 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:52:55 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:52:55 IST" name="afterMethod" finished-at="2025-09-26T17:52:57 IST" duration-ms="1508" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, clickElement {id=7edccd97-702f-4345-8708-320afb244893}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (41eaa286-5fb3-48f7-8654-f0ce0f46a856)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, clickElement {id=7edccd97-702f-4345-8708-320afb244893}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (41eaa286-5fb3-48f7-8654-f0ce0f46a856)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:45)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:52:57 IST" name="beforeMethod" finished-at="2025-09-26T17:53:12 IST" duration-ms="15025" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:53:12 IST" name="firstScenarioTest" finished-at="2025-09-26T17:53:12 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:53:12 IST" name="afterMethod" finished-at="2025-09-26T17:53:13 IST" duration-ms="1032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:53:13 IST" name="beforeMethod" finished-at="2025-09-26T17:53:13 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:53:13 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:53:13 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [41eaa286-5fb3-48f7-8654-f0ce0f46a856, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 17852, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 41eaa286-5fb3-48f7-8654-f0ce0f46a856
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:53:13 IST" name="afterMethod" finished-at="2025-09-26T17:53:16 IST" duration-ms="3422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@e056f20]" started-at="2025-09-26T17:53:16 IST" name="afterClassMethod" finished-at="2025-09-26T17:53:17 IST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:33 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:38 IST" duration-ms="4802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:38 IST" name="beforeMethod" finished-at="2025-09-26T17:52:38 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:38 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:38 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:38 IST" name="afterMethod" finished-at="2025-09-26T17:52:43 IST" duration-ms="4539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:43 IST" name="beforeMethod" finished-at="2025-09-26T17:52:43 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:43 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:43 IST" name="afterMethod" finished-at="2025-09-26T17:52:46 IST" duration-ms="3329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:46 IST" name="beforeMethod" finished-at="2025-09-26T17:52:46 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:46 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:46 IST" name="afterMethod" finished-at="2025-09-26T17:52:49 IST" duration-ms="3265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@34b7ac2f]" started-at="2025-09-26T17:52:49 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:51 IST" duration-ms="1345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:02 IST" name="beforeClassMethod" finished-at="2025-09-26T17:52:07 IST" duration-ms="4840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:07 IST" name="beforeMethod" finished-at="2025-09-26T17:52:07 IST" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:07 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:52:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:07 IST" name="afterMethod" finished-at="2025-09-26T17:52:11 IST" duration-ms="4316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:11 IST" name="beforeMethod" finished-at="2025-09-26T17:52:11 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:11 IST" name="firstScenarioTest" finished-at="2025-09-26T17:52:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:11 IST" name="afterMethod" finished-at="2025-09-26T17:52:14 IST" duration-ms="2105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:14 IST" name="beforeMethod" finished-at="2025-09-26T17:52:14 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:14 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:52:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:14 IST" name="afterMethod" finished-at="2025-09-26T17:52:30 IST" duration-ms="16726" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [e0a05ca6-349c-4fb1-97ed-5031f09109ab, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 2072, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: e0a05ca6-349c-4fb1-97ed-5031f09109ab]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [e0a05ca6-349c-4fb1-97ed-5031f09109ab, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 2072, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: e0a05ca6-349c-4fb1-97ed-5031f09109ab
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@6e4784bc]" started-at="2025-09-26T17:52:30 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:33 IST" duration-ms="2866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:50:32 IST" name="beforeClassMethod" finished-at="2025-09-26T17:50:40 IST" duration-ms="7473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:50:40 IST" name="beforeMethod" finished-at="2025-09-26T17:50:40 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:50:40 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:50:40 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:50:40 IST" name="afterMethod" finished-at="2025-09-26T17:50:59 IST" duration-ms="19455" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:50:59 IST" name="beforeMethod" finished-at="2025-09-26T17:51:15 IST" duration-ms="15016" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:51:15 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:15 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:51:15 IST" name="afterMethod" finished-at="2025-09-26T17:51:16 IST" duration-ms="1468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:51:16 IST" name="beforeMethod" finished-at="2025-09-26T17:51:16 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:51:16 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:16 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24064, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 2d4d90e6-86ff-4b0f-8a65-adbc7df4dc5b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:51:16 IST" name="afterMethod" finished-at="2025-09-26T17:51:19 IST" duration-ms="2612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@5bd03f44]" started-at="2025-09-26T17:51:19 IST" name="afterClassMethod" finished-at="2025-09-26T17:51:21 IST" duration-ms="2712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:40 IST" name="beforeClassMethod" finished-at="2025-09-26T17:51:47 IST" duration-ms="7158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:47 IST" name="beforeMethod" finished-at="2025-09-26T17:51:48 IST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:48 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:51:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:48 IST" name="afterMethod" finished-at="2025-09-26T17:51:52 IST" duration-ms="4161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:52 IST" name="beforeMethod" finished-at="2025-09-26T17:51:52 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:52 IST" name="firstScenarioTest" finished-at="2025-09-26T17:51:52 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:52 IST" name="afterMethod" finished-at="2025-09-26T17:51:55 IST" duration-ms="2600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:55 IST" name="beforeMethod" finished-at="2025-09-26T17:51:55 IST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:55 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:51:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:55 IST" name="afterMethod" finished-at="2025-09-26T17:51:59 IST" duration-ms="4273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@5a63f509]" started-at="2025-09-26T17:51:59 IST" name="afterClassMethod" finished-at="2025-09-26T17:52:02 IST" duration-ms="2676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:53:54 IST" name="beforeClassMethod" finished-at="2025-09-26T17:53:59 IST" duration-ms="4154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:53:59 IST" name="beforeMethod" finished-at="2025-09-26T17:53:59 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:53:59 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:53:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:53:59 IST" name="afterMethod" finished-at="2025-09-26T17:54:01 IST" duration-ms="2480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:01 IST" name="beforeMethod" finished-at="2025-09-26T17:54:01 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:01 IST" name="firstScenarioTest" finished-at="2025-09-26T17:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:01 IST" name="afterMethod" finished-at="2025-09-26T17:54:04 IST" duration-ms="3256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:04 IST" name="beforeMethod" finished-at="2025-09-26T17:54:04 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:04 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:54:04 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:04 IST" name="afterMethod" finished-at="2025-09-26T17:54:07 IST" duration-ms="2274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@10e41621]" started-at="2025-09-26T17:54:07 IST" name="afterClassMethod" finished-at="2025-09-26T17:54:08 IST" duration-ms="1305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:38 IST" name="beforeClassMethod" finished-at="2025-09-26T17:53:42 IST" duration-ms="4330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:42 IST" name="beforeMethod" finished-at="2025-09-26T17:53:42 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:42 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:53:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:42 IST" name="afterMethod" finished-at="2025-09-26T17:53:46 IST" duration-ms="3974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:46 IST" name="beforeMethod" finished-at="2025-09-26T17:53:46 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:46 IST" name="firstScenarioTest" finished-at="2025-09-26T17:53:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:46 IST" name="afterMethod" finished-at="2025-09-26T17:53:50 IST" duration-ms="3297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:50 IST" name="beforeMethod" finished-at="2025-09-26T17:53:50 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:50 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:53:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:50 IST" name="afterMethod" finished-at="2025-09-26T17:53:53 IST" duration-ms="3252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@19bb07ed]" started-at="2025-09-26T17:53:53 IST" name="afterClassMethod" finished-at="2025-09-26T17:53:54 IST" duration-ms="1304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:17 IST" name="beforeClassMethod" finished-at="2025-09-26T17:53:22 IST" duration-ms="4387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@8399bce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:22 IST" name="beforeMethod" finished-at="2025-09-26T17:53:22 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:22 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:53:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:22 IST" name="afterMethod" finished-at="2025-09-26T17:53:26 IST" duration-ms="4075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:26 IST" name="beforeMethod" finished-at="2025-09-26T17:53:26 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:26 IST" name="firstScenarioTest" finished-at="2025-09-26T17:53:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:26 IST" name="afterMethod" finished-at="2025-09-26T17:53:30 IST" duration-ms="3488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:30 IST" name="beforeMethod" finished-at="2025-09-26T17:53:30 IST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:30 IST" name="fourthScenarioTest" finished-at="2025-09-26T17:53:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:30 IST" name="afterMethod" finished-at="2025-09-26T17:53:33 IST" duration-ms="3540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:33 IST" name="beforeMethod" finished-at="2025-09-26T17:53:33 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:33 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:53:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:33 IST" name="afterMethod" finished-at="2025-09-26T17:53:37 IST" duration-ms="3340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@4b0b0854]" started-at="2025-09-26T17:53:37 IST" name="afterClassMethod" finished-at="2025-09-26T17:53:38 IST" duration-ms="1272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- firefoxSuite -->
  </suite> <!-- Suite -->
</testng-results>
