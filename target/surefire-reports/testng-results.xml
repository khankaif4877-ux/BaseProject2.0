<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="84" passed="80" failed="0" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-26T11:58:14 IST" name="Suite" finished-at="2025-09-26T12:01:00 IST" duration-ms="165733">
    <groups>
      <group name="reg">
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@67a20f67]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@67a20f67]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@10e41621]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@10e41621]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@6e4784bc]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@6e4784bc]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@e056f20]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@e056f20]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@2667f029]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@2667f029]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@6a400542]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@6a400542]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@9225652]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@9225652]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@13e39c73]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@13e39c73]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@64cd705f]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@64cd705f]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- reg -->
      <group name="smoke">
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@67a20f67]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@10e41621]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@6e4784bc]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@e056f20]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@2667f029]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@6a400542]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@9225652]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@13e39c73]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@64cd705f]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-09-26T11:58:14 IST" name="edgeSuit" finished-at="2025-09-26T12:00:14 IST" duration-ms="119238">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:28 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:30 IST" duration-ms="1842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:30 IST" name="beforeMethod" finished-at="2025-09-26T11:58:32 IST" duration-ms="1994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:32 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:32 IST" name="afterMethod" finished-at="2025-09-26T11:58:34 IST" duration-ms="2044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:34 IST" name="beforeMethod" finished-at="2025-09-26T11:58:35 IST" duration-ms="1090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:35 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:35 IST" name="afterMethod" finished-at="2025-09-26T11:58:37 IST" duration-ms="2056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:37 IST" name="beforeMethod" finished-at="2025-09-26T11:58:39 IST" duration-ms="1372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:39 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:39 IST" name="afterMethod" finished-at="2025-09-26T11:58:41 IST" duration-ms="2561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T11:58:41 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:42 IST" duration-ms="415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:21 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:22 IST" duration-ms="1244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:22 IST" name="beforeMethod" finished-at="2025-09-26T11:59:24 IST" duration-ms="1885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:24 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:24 IST" name="afterMethod" finished-at="2025-09-26T11:59:26 IST" duration-ms="1973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:26 IST" name="beforeMethod" finished-at="2025-09-26T11:59:27 IST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:27 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:27 IST" name="afterMethod" finished-at="2025-09-26T11:59:29 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:29 IST" name="beforeMethod" finished-at="2025-09-26T11:59:29 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:29 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:29 IST" name="afterMethod" finished-at="2025-09-26T11:59:32 IST" duration-ms="3212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T11:59:32 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:32 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:08 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:10 IST" duration-ms="2416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:10 IST" name="beforeMethod" finished-at="2025-09-26T11:59:12 IST" duration-ms="2247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:12 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:12 IST" name="afterMethod" finished-at="2025-09-26T11:59:14 IST" duration-ms="1859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:14 IST" name="beforeMethod" finished-at="2025-09-26T11:59:15 IST" duration-ms="1091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:15 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:15 IST" name="afterMethod" finished-at="2025-09-26T11:59:17 IST" duration-ms="2163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:17 IST" name="beforeMethod" finished-at="2025-09-26T11:59:19 IST" duration-ms="1066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:19 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:19 IST" name="afterMethod" finished-at="2025-09-26T11:59:21 IST" duration-ms="2079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T11:59:21 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:21 IST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:58:54 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:56 IST" duration-ms="2426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:58:56 IST" name="beforeMethod" finished-at="2025-09-26T11:58:59 IST" duration-ms="2459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:58:59 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:58:59 IST" name="afterMethod" finished-at="2025-09-26T11:59:01 IST" duration-ms="1920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:01 IST" name="beforeMethod" finished-at="2025-09-26T11:59:02 IST" duration-ms="1188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:02 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:02 IST" name="afterMethod" finished-at="2025-09-26T11:59:04 IST" duration-ms="2174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:04 IST" name="beforeMethod" finished-at="2025-09-26T11:59:05 IST" duration-ms="1074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:05 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:05 IST" name="afterMethod" finished-at="2025-09-26T11:59:07 IST" duration-ms="2089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T11:59:07 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:08 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:15 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:17 IST" duration-ms="1987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:17 IST" name="beforeMethod" finished-at="2025-09-26T11:58:19 IST" duration-ms="2777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:19 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:19 IST" name="afterMethod" finished-at="2025-09-26T11:58:21 IST" duration-ms="1851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:21 IST" name="beforeMethod" finished-at="2025-09-26T11:58:22 IST" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:22 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:22 IST" name="afterMethod" finished-at="2025-09-26T11:58:25 IST" duration-ms="2204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:25 IST" name="beforeMethod" finished-at="2025-09-26T11:58:26 IST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:26 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:26 IST" name="afterMethod" finished-at="2025-09-26T11:58:28 IST" duration-ms="2383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T11:58:28 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:28 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:42 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:43 IST" duration-ms="1438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:43 IST" name="beforeMethod" finished-at="2025-09-26T11:58:45 IST" duration-ms="1701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:45 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:45 IST" name="afterMethod" finished-at="2025-09-26T11:58:47 IST" duration-ms="2105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:47 IST" name="beforeMethod" finished-at="2025-09-26T11:58:48 IST" duration-ms="1070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:48 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:48 IST" name="afterMethod" finished-at="2025-09-26T11:58:50 IST" duration-ms="2077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:50 IST" name="beforeMethod" finished-at="2025-09-26T11:58:51 IST" duration-ms="1329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:51 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:51 IST" name="afterMethod" finished-at="2025-09-26T11:58:54 IST" duration-ms="2017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T11:58:54 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:54 IST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:01 IST" name="beforeClassMethod" finished-at="2025-09-26T12:00:03 IST" duration-ms="1200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:03 IST" name="beforeMethod" finished-at="2025-09-26T12:00:04 IST" duration-ms="1914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:04 IST" name="ScecondScenarioTest" finished-at="2025-09-26T12:00:04 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:04 IST" name="afterMethod" finished-at="2025-09-26T12:00:06 IST" duration-ms="1966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:06 IST" name="beforeMethod" finished-at="2025-09-26T12:00:08 IST" duration-ms="1300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:08 IST" name="firstScenarioTest" finished-at="2025-09-26T12:00:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:08 IST" name="afterMethod" finished-at="2025-09-26T12:00:10 IST" duration-ms="1939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:10 IST" name="beforeMethod" finished-at="2025-09-26T12:00:11 IST" duration-ms="1569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:11 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:00:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:11 IST" name="afterMethod" finished-at="2025-09-26T12:00:13 IST" duration-ms="1988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T12:00:13 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:14 IST" duration-ms="480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:48 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:50 IST" duration-ms="1256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:50 IST" name="beforeMethod" finished-at="2025-09-26T11:59:52 IST" duration-ms="2161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:52 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:52 IST" name="afterMethod" finished-at="2025-09-26T11:59:54 IST" duration-ms="1742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:54 IST" name="beforeMethod" finished-at="2025-09-26T11:59:55 IST" duration-ms="1423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:55 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:55 IST" name="afterMethod" finished-at="2025-09-26T11:59:57 IST" duration-ms="2160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:57 IST" name="beforeMethod" finished-at="2025-09-26T11:59:59 IST" duration-ms="1785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:59 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T11:59:59 IST" name="afterMethod" finished-at="2025-09-26T12:00:01 IST" duration-ms="2140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T12:00:01 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:01 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:32 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:34 IST" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:34 IST" name="beforeMethod" finished-at="2025-09-26T11:59:36 IST" duration-ms="1956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:36 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:36 IST" name="afterMethod" finished-at="2025-09-26T11:59:38 IST" duration-ms="2290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:38 IST" name="beforeMethod" finished-at="2025-09-26T11:59:39 IST" duration-ms="1309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:39 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:39 IST" name="afterMethod" finished-at="2025-09-26T11:59:42 IST" duration-ms="2086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:42 IST" name="beforeMethod" finished-at="2025-09-26T11:59:43 IST" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:43 IST" name="fourthScenarioTest" finished-at="2025-09-26T11:59:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:43 IST" name="afterMethod" finished-at="2025-09-26T11:59:45 IST" duration-ms="2165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:45 IST" name="beforeMethod" finished-at="2025-09-26T11:59:45 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:45 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:45 IST" name="afterMethod" finished-at="2025-09-26T11:59:48 IST" duration-ms="3274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T11:59:48 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:48 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- edgeSuit -->
    <test started-at="2025-09-26T11:58:14 IST" name="chromeSuite" finished-at="2025-09-26T12:00:15 IST" duration-ms="120960">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:28 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:30 IST" duration-ms="1448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:30 IST" name="beforeMethod" finished-at="2025-09-26T11:58:32 IST" duration-ms="2370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:32 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:32 IST" name="afterMethod" finished-at="2025-09-26T11:58:34 IST" duration-ms="1913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:34 IST" name="beforeMethod" finished-at="2025-09-26T11:58:35 IST" duration-ms="1106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:35 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:35 IST" name="afterMethod" finished-at="2025-09-26T11:58:37 IST" duration-ms="2133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:37 IST" name="beforeMethod" finished-at="2025-09-26T11:58:38 IST" duration-ms="1210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:38 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:38 IST" name="afterMethod" finished-at="2025-09-26T11:58:41 IST" duration-ms="2157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@34b7ac2f]" started-at="2025-09-26T11:58:41 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:41 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:22 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:23 IST" duration-ms="1259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:23 IST" name="beforeMethod" finished-at="2025-09-26T11:59:25 IST" duration-ms="2022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:25 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:25 IST" name="afterMethod" finished-at="2025-09-26T11:59:27 IST" duration-ms="2102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:27 IST" name="beforeMethod" finished-at="2025-09-26T11:59:27 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:27 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:27 IST" name="afterMethod" finished-at="2025-09-26T11:59:31 IST" duration-ms="3122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:31 IST" name="beforeMethod" finished-at="2025-09-26T11:59:32 IST" duration-ms="1109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:32 IST" name="afterMethod" finished-at="2025-09-26T11:59:34 IST" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@10e41621]" started-at="2025-09-26T11:59:34 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:34 IST" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:08 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:10 IST" duration-ms="2160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:10 IST" name="beforeMethod" finished-at="2025-09-26T11:59:13 IST" duration-ms="3327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:13 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:13 IST" name="afterMethod" finished-at="2025-09-26T11:59:15 IST" duration-ms="2208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:15 IST" name="beforeMethod" finished-at="2025-09-26T11:59:15 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:15 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:15 IST" name="afterMethod" finished-at="2025-09-26T11:59:18 IST" duration-ms="2979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:18 IST" name="beforeMethod" finished-at="2025-09-26T11:59:20 IST" duration-ms="1216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:20 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:20 IST" name="afterMethod" finished-at="2025-09-26T11:59:22 IST" duration-ms="2082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@19bb07ed]" started-at="2025-09-26T11:59:22 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:22 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:58:54 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:56 IST" duration-ms="2188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:58:56 IST" name="beforeMethod" finished-at="2025-09-26T11:58:59 IST" duration-ms="2834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:58:59 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:58:59 IST" name="afterMethod" finished-at="2025-09-26T11:59:01 IST" duration-ms="1878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:01 IST" name="beforeMethod" finished-at="2025-09-26T11:59:01 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:01 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:01 IST" name="afterMethod" finished-at="2025-09-26T11:59:04 IST" duration-ms="3252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:04 IST" name="beforeMethod" finished-at="2025-09-26T11:59:05 IST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:05 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:05 IST" name="afterMethod" finished-at="2025-09-26T11:59:07 IST" duration-ms="2045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@4b0b0854]" started-at="2025-09-26T11:59:07 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:08 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:15 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:17 IST" duration-ms="2330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:17 IST" name="beforeMethod" finished-at="2025-09-26T11:58:19 IST" duration-ms="2492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:19 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:19 IST" name="afterMethod" finished-at="2025-09-26T11:58:21 IST" duration-ms="1789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:21 IST" name="beforeMethod" finished-at="2025-09-26T11:58:22 IST" duration-ms="1321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:22 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:22 IST" name="afterMethod" finished-at="2025-09-26T11:58:25 IST" duration-ms="2061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:25 IST" name="beforeMethod" finished-at="2025-09-26T11:58:26 IST" duration-ms="1238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:26 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:26 IST" name="afterMethod" finished-at="2025-09-26T11:58:28 IST" duration-ms="2283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@6e4784bc]" started-at="2025-09-26T11:58:28 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:28 IST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:41 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:42 IST" duration-ms="1528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:42 IST" name="beforeMethod" finished-at="2025-09-26T11:58:44 IST" duration-ms="2109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:44 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:44 IST" name="afterMethod" finished-at="2025-09-26T11:58:46 IST" duration-ms="2000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:46 IST" name="beforeMethod" finished-at="2025-09-26T11:58:47 IST" duration-ms="1038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:47 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:47 IST" name="afterMethod" finished-at="2025-09-26T11:58:50 IST" duration-ms="2094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:50 IST" name="beforeMethod" finished-at="2025-09-26T11:58:51 IST" duration-ms="1247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:51 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:51 IST" name="afterMethod" finished-at="2025-09-26T11:58:53 IST" duration-ms="2089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@e056f20]" started-at="2025-09-26T11:58:53 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:54 IST" duration-ms="1000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:02 IST" name="beforeClassMethod" finished-at="2025-09-26T12:00:04 IST" duration-ms="1550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:04 IST" name="beforeMethod" finished-at="2025-09-26T12:00:06 IST" duration-ms="2186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:06 IST" name="ScecondScenarioTest" finished-at="2025-09-26T12:00:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:06 IST" name="afterMethod" finished-at="2025-09-26T12:00:08 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:08 IST" name="beforeMethod" finished-at="2025-09-26T12:00:10 IST" duration-ms="1402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:10 IST" name="firstScenarioTest" finished-at="2025-09-26T12:00:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:10 IST" name="afterMethod" finished-at="2025-09-26T12:00:12 IST" duration-ms="2151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:12 IST" name="beforeMethod" finished-at="2025-09-26T12:00:13 IST" duration-ms="1340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:13 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:00:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:13 IST" name="afterMethod" finished-at="2025-09-26T12:00:15 IST" duration-ms="2129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@67a20f67]" started-at="2025-09-26T12:00:15 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:15 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:50 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:52 IST" duration-ms="1428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:52 IST" name="beforeMethod" finished-at="2025-09-26T11:59:54 IST" duration-ms="1866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:54 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:54 IST" name="afterMethod" finished-at="2025-09-26T11:59:56 IST" duration-ms="1866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:56 IST" name="beforeMethod" finished-at="2025-09-26T11:59:57 IST" duration-ms="1389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:57 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:57 IST" name="afterMethod" finished-at="2025-09-26T11:59:59 IST" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T11:59:59 IST" name="beforeMethod" finished-at="2025-09-26T12:00:00 IST" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T12:00:00 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:00:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T12:00:00 IST" name="afterMethod" finished-at="2025-09-26T12:00:02 IST" duration-ms="2089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@2667f029]" started-at="2025-09-26T12:00:02 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:02 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:34 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:36 IST" duration-ms="1642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:36 IST" name="beforeMethod" finished-at="2025-09-26T11:59:38 IST" duration-ms="2094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:38 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:38 IST" name="afterMethod" finished-at="2025-09-26T11:59:40 IST" duration-ms="1911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:40 IST" name="beforeMethod" finished-at="2025-09-26T11:59:41 IST" duration-ms="1449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:41 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:41 IST" name="afterMethod" finished-at="2025-09-26T11:59:43 IST" duration-ms="2154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:43 IST" name="beforeMethod" finished-at="2025-09-26T11:59:44 IST" duration-ms="1228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:44 IST" name="fourthScenarioTest" finished-at="2025-09-26T11:59:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:44 IST" name="afterMethod" finished-at="2025-09-26T11:59:47 IST" duration-ms="2169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:47 IST" name="beforeMethod" finished-at="2025-09-26T11:59:48 IST" duration-ms="1250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:48 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:48 IST" name="afterMethod" finished-at="2025-09-26T11:59:50 IST" duration-ms="2069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@353d0772]" started-at="2025-09-26T11:59:50 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:50 IST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- chromeSuite -->
    <test started-at="2025-09-26T11:58:14 IST" name="firefoxSuite" finished-at="2025-09-26T12:01:00 IST" duration-ms="165733">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:32 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:36 IST" duration-ms="4422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:36 IST" name="beforeMethod" finished-at="2025-09-26T11:58:37 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:37 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:37 IST" name="afterMethod" finished-at="2025-09-26T11:58:41 IST" duration-ms="3963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:41 IST" name="beforeMethod" finished-at="2025-09-26T11:58:41 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:41 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:41 IST" name="afterMethod" finished-at="2025-09-26T11:58:44 IST" duration-ms="3392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:44 IST" name="beforeMethod" finished-at="2025-09-26T11:58:44 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:44 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:44 IST" name="afterMethod" finished-at="2025-09-26T11:58:48 IST" duration-ms="3390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@13e39c73]" started-at="2025-09-26T11:58:48 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:49 IST" duration-ms="1424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T11:59:51 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:56 IST" duration-ms="5191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T11:59:56 IST" name="beforeMethod" finished-at="2025-09-26T11:59:56 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T11:59:56 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T11:59:56 IST" name="afterMethod" finished-at="2025-09-26T12:00:00 IST" duration-ms="4040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:00 IST" name="beforeMethod" finished-at="2025-09-26T12:00:00 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:00 IST" name="firstScenarioTest" finished-at="2025-09-26T12:00:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:00 IST" name="afterMethod" finished-at="2025-09-26T12:00:03 IST" duration-ms="3244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:03 IST" name="beforeMethod" finished-at="2025-09-26T12:00:03 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:03 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:00:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:03 IST" name="afterMethod" finished-at="2025-09-26T12:00:05 IST" duration-ms="2027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@6a400542]" started-at="2025-09-26T12:00:05 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:07 IST" duration-ms="1202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:34 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:39 IST" duration-ms="4577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:39 IST" name="beforeMethod" finished-at="2025-09-26T11:59:39 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:39 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:39 IST" name="afterMethod" finished-at="2025-09-26T11:59:43 IST" duration-ms="4008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:43 IST" name="beforeMethod" finished-at="2025-09-26T11:59:43 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:43 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:43 IST" name="afterMethod" finished-at="2025-09-26T11:59:46 IST" duration-ms="3164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:46 IST" name="beforeMethod" finished-at="2025-09-26T11:59:46 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:46 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:46 IST" name="afterMethod" finished-at="2025-09-26T11:59:49 IST" duration-ms="3216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@654f0d9c]" started-at="2025-09-26T11:59:49 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:51 IST" duration-ms="1263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:05 IST" name="beforeClassMethod" finished-at="2025-09-26T11:59:11 IST" duration-ms="5316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:11 IST" name="beforeMethod" finished-at="2025-09-26T11:59:11 IST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:11 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:59:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:11 IST" name="afterMethod" finished-at="2025-09-26T11:59:13 IST" duration-ms="1819" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, clickElement {id=bc43283b-ef8b-4859-aae0-7fb296e74b27}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (def3b03b-5521-4531-96ce-e1632f2d83bf)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, clickElement {id=bc43283b-ef8b-4859-aae0-7fb296e74b27}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (def3b03b-5521-4531-96ce-e1632f2d83bf)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:45)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:108)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:13 IST" name="beforeMethod" finished-at="2025-09-26T11:59:28 IST" duration-ms="15040" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:102)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:28 IST" name="firstScenarioTest" finished-at="2025-09-26T11:59:28 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:102)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:28 IST" name="afterMethod" finished-at="2025-09-26T11:59:29 IST" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:29 IST" name="beforeMethod" finished-at="2025-09-26T11:59:29 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:29 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:29 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [def3b03b-5521-4531-96ce-e1632f2d83bf, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 19548, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: def3b03b-5521-4531-96ce-e1632f2d83bf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:102)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:29 IST" name="afterMethod" finished-at="2025-09-26T11:59:32 IST" duration-ms="3339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@9225652]" started-at="2025-09-26T11:59:32 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:34 IST" duration-ms="1928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeSuitMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:14 IST" name="beforeSuitMethod" finished-at="2025-09-26T11:58:14 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuitMethod -->
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:15 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:20 IST" duration-ms="5374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:20 IST" name="beforeMethod" finished-at="2025-09-26T11:58:20 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:20 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:20 IST" name="afterMethod" finished-at="2025-09-26T11:58:24 IST" duration-ms="3905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:24 IST" name="beforeMethod" finished-at="2025-09-26T11:58:24 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:24 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:24 IST" name="afterMethod" finished-at="2025-09-26T11:58:28 IST" duration-ms="3461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:28 IST" name="beforeMethod" finished-at="2025-09-26T11:58:28 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:28 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:58:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:28 IST" name="afterMethod" finished-at="2025-09-26T11:58:31 IST" duration-ms="3277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T11:58:31 IST" name="afterClassMethod" finished-at="2025-09-26T11:58:32 IST" duration-ms="1137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
        <test-method is-config="true" signature="afterSuitMethod()[pri:0, instance:module02.ClassOneTest@a9cd3b1]" started-at="2025-09-26T12:01:00 IST" name="afterSuitMethod" finished-at="2025-09-26T12:01:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuitMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:49 IST" name="beforeClassMethod" finished-at="2025-09-26T11:58:53 IST" duration-ms="3969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:53 IST" name="beforeMethod" finished-at="2025-09-26T11:58:53 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:53 IST" name="ScecondScenarioTest" finished-at="2025-09-26T11:58:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:53 IST" name="afterMethod" finished-at="2025-09-26T11:58:57 IST" duration-ms="3700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:57 IST" name="beforeMethod" finished-at="2025-09-26T11:58:57 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:57 IST" name="firstScenarioTest" finished-at="2025-09-26T11:58:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:58:57 IST" name="afterMethod" finished-at="2025-09-26T11:59:00 IST" duration-ms="3386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:59:00 IST" name="beforeMethod" finished-at="2025-09-26T11:59:00 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:59:00 IST" name="thirdScenarioTest" finished-at="2025-09-26T11:59:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:59:00 IST" name="afterMethod" finished-at="2025-09-26T11:59:04 IST" duration-ms="3420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@64cd705f]" started-at="2025-09-26T11:59:04 IST" name="afterClassMethod" finished-at="2025-09-26T11:59:05 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:39 IST" name="beforeClassMethod" finished-at="2025-09-26T12:00:42 IST" duration-ms="3319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:42 IST" name="beforeMethod" finished-at="2025-09-26T12:00:42 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:42 IST" name="ScecondScenarioTest" finished-at="2025-09-26T12:00:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:42 IST" name="afterMethod" finished-at="2025-09-26T12:00:44 IST" duration-ms="1278" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, clickElement {id=e117030b-8b83-413e-ade7-8a91739b5a73}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, clickElement {id=e117030b-8b83-413e-ade7-8a91739b5a73}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:45)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:108)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:44 IST" name="beforeMethod" finished-at="2025-09-26T12:00:59 IST" duration-ms="15027" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:102)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:59 IST" name="firstScenarioTest" finished-at="2025-09-26T12:00:59 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:102)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:59 IST" name="afterMethod" finished-at="2025-09-26T12:00:59 IST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:00:59 IST" name="beforeMethod" finished-at="2025-09-26T12:01:00 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:01:00 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:01:00 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:102)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:01:00 IST" name="afterMethod" finished-at="2025-09-26T12:01:00 IST" duration-ms="527" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[BrowsingContext does no longer exist
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=xpath, value=//img[@src='themes/softed/images/user.PNG']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: BrowsingContext does no longer exist
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, findElement {using=xpath, value=//img[@src='themes/softed/images/user.PNG']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:45)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:108)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:623)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-09-26T12:01:00 IST" name="afterClassMethod" finished-at="2025-09-26T12:01:00 IST" duration-ms="159" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Failed to decode response from marionette
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, quit {}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Failed to decode response from marionette
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6, quit {}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18096, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 0b3f5cc9-44a7-4ea0-8c40-597d94f3b7a6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.lambda$execute$1(DriverCommandExecutor.java:126)
at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:26 IST" name="beforeClassMethod" finished-at="2025-09-26T12:00:29 IST" duration-ms="3503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:29 IST" name="beforeMethod" finished-at="2025-09-26T12:00:30 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:30 IST" name="ScecondScenarioTest" finished-at="2025-09-26T12:00:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:30 IST" name="afterMethod" finished-at="2025-09-26T12:00:32 IST" duration-ms="2077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:32 IST" name="beforeMethod" finished-at="2025-09-26T12:00:32 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:32 IST" name="firstScenarioTest" finished-at="2025-09-26T12:00:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:32 IST" name="afterMethod" finished-at="2025-09-26T12:00:35 IST" duration-ms="3119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:35 IST" name="beforeMethod" finished-at="2025-09-26T12:00:35 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:35 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:00:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:35 IST" name="afterMethod" finished-at="2025-09-26T12:00:38 IST" duration-ms="3169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@7e0b85f9]" started-at="2025-09-26T12:00:38 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:39 IST" duration-ms="875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(java.lang.String)[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:07 IST" name="beforeClassMethod" finished-at="2025-09-26T12:00:11 IST" duration-ms="4763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:11 IST" name="beforeMethod" finished-at="2025-09-26T12:00:12 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:12 IST" name="ScecondScenarioTest" finished-at="2025-09-26T12:00:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:12 IST" name="afterMethod" finished-at="2025-09-26T12:00:16 IST" duration-ms="4170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:16 IST" name="beforeMethod" finished-at="2025-09-26T12:00:16 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:16 IST" name="firstScenarioTest" finished-at="2025-09-26T12:00:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:16 IST" name="afterMethod" finished-at="2025-09-26T12:00:19 IST" duration-ms="3138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:19 IST" name="beforeMethod" finished-at="2025-09-26T12:00:19 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:19 IST" name="fourthScenarioTest" finished-at="2025-09-26T12:00:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:19 IST" name="afterMethod" finished-at="2025-09-26T12:00:22 IST" duration-ms="3037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:22 IST" name="beforeMethod" finished-at="2025-09-26T12:00:22 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:22 IST" name="thirdScenarioTest" finished-at="2025-09-26T12:00:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:22 IST" name="afterMethod" finished-at="2025-09-26T12:00:25 IST" duration-ms="3010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@6580cfdd]" started-at="2025-09-26T12:00:25 IST" name="afterClassMethod" finished-at="2025-09-26T12:00:26 IST" duration-ms="899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- firefoxSuite -->
  </suite> <!-- Suite -->
</testng-results>
