<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="27" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-26T15:14:43 IST" name="Suite" finished-at="2025-09-26T15:16:42 IST" duration-ms="118820">
    <groups>
      <group name="reg">
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@30ee2816]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@30ee2816]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@1700915]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@1700915]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@6a28ffa4]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@6a28ffa4]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@7e0b85f9]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@7e0b85f9]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@48ae9b55]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@48ae9b55]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@63355449]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@63355449]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@9353778]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@9353778]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@c267ef4]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@c267ef4]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@21de60b4]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@21de60b4]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@21de60b4]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- reg -->
      <group name="smoke">
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@6a400542]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@64cd705f]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@a9cd3b1]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@2667f029]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@13e39c73]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@67a20f67]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@57c758ac]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@654f0d9c]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@9225652]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@30ee2816]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@1700915]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@6a28ffa4]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@7e0b85f9]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@48ae9b55]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@63355449]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@9353778]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@c267ef4]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@21de60b4]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-09-26T15:14:43 IST" name="edgeSuit" finished-at="2025-09-26T15:16:42 IST" duration-ms="118820">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:10 IST" name="beforeClassMethod" finished-at="2025-09-26T15:15:11 IST" duration-ms="1187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:11 IST" name="beforeMethod" finished-at="2025-09-26T15:15:13 IST" duration-ms="1748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:13 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:15:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:13 IST" name="afterMethod" finished-at="2025-09-26T15:15:14 IST" duration-ms="1729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:14 IST" name="beforeMethod" finished-at="2025-09-26T15:15:14 IST" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:14 IST" name="firstScenarioTest" finished-at="2025-09-26T15:15:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:14 IST" name="afterMethod" finished-at="2025-09-26T15:15:17 IST" duration-ms="2785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:17 IST" name="beforeMethod" finished-at="2025-09-26T15:15:18 IST" duration-ms="1023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:18 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:15:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:18 IST" name="afterMethod" finished-at="2025-09-26T15:15:20 IST" duration-ms="1977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@161479c6]" started-at="2025-09-26T15:15:20 IST" name="afterClassMethod" finished-at="2025-09-26T15:15:20 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:15:53 IST" name="beforeClassMethod" finished-at="2025-09-26T15:15:55 IST" duration-ms="1295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:15:55 IST" name="beforeMethod" finished-at="2025-09-26T15:15:57 IST" duration-ms="2153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:15:57 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:15:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:15:57 IST" name="afterMethod" finished-at="2025-09-26T15:15:59 IST" duration-ms="1822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:15:59 IST" name="beforeMethod" finished-at="2025-09-26T15:16:00 IST" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:16:00 IST" name="firstScenarioTest" finished-at="2025-09-26T15:16:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:16:00 IST" name="afterMethod" finished-at="2025-09-26T15:16:02 IST" duration-ms="1914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:16:02 IST" name="beforeMethod" finished-at="2025-09-26T15:16:03 IST" duration-ms="1058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:16:03 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:16:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:16:03 IST" name="afterMethod" finished-at="2025-09-26T15:16:05 IST" duration-ms="2078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@2b6faea6]" started-at="2025-09-26T15:16:05 IST" name="afterClassMethod" finished-at="2025-09-26T15:16:05 IST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:42 IST" name="beforeClassMethod" finished-at="2025-09-26T15:15:44 IST" duration-ms="1234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:44 IST" name="beforeMethod" finished-at="2025-09-26T15:15:45 IST" duration-ms="1878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:45 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:15:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:45 IST" name="afterMethod" finished-at="2025-09-26T15:15:47 IST" duration-ms="1789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:47 IST" name="beforeMethod" finished-at="2025-09-26T15:15:47 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:47 IST" name="firstScenarioTest" finished-at="2025-09-26T15:15:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:47 IST" name="afterMethod" finished-at="2025-09-26T15:15:50 IST" duration-ms="2884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:50 IST" name="beforeMethod" finished-at="2025-09-26T15:15:50 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:50 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:15:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:50 IST" name="afterMethod" finished-at="2025-09-26T15:15:53 IST" duration-ms="2900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@1e802ef9]" started-at="2025-09-26T15:15:53 IST" name="afterClassMethod" finished-at="2025-09-26T15:15:53 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:31 IST" name="beforeClassMethod" finished-at="2025-09-26T15:15:33 IST" duration-ms="1222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:33 IST" name="beforeMethod" finished-at="2025-09-26T15:15:34 IST" duration-ms="1824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:34 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:15:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:34 IST" name="afterMethod" finished-at="2025-09-26T15:15:36 IST" duration-ms="1831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:36 IST" name="beforeMethod" finished-at="2025-09-26T15:15:37 IST" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:37 IST" name="firstScenarioTest" finished-at="2025-09-26T15:15:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:37 IST" name="afterMethod" finished-at="2025-09-26T15:15:39 IST" duration-ms="1977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:39 IST" name="beforeMethod" finished-at="2025-09-26T15:15:40 IST" duration-ms="972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:40 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:15:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:40 IST" name="afterMethod" finished-at="2025-09-26T15:15:42 IST" duration-ms="1993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@7f010382]" started-at="2025-09-26T15:15:42 IST" name="afterClassMethod" finished-at="2025-09-26T15:15:42 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:43 IST" name="beforeClassMethod" finished-at="2025-09-26T15:14:45 IST" duration-ms="2197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:45 IST" name="beforeMethod" finished-at="2025-09-26T15:14:48 IST" duration-ms="3149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:48 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:14:48 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:48 IST" name="afterMethod" finished-at="2025-09-26T15:14:50 IST" duration-ms="1781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:50 IST" name="beforeMethod" finished-at="2025-09-26T15:14:51 IST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:51 IST" name="firstScenarioTest" finished-at="2025-09-26T15:14:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:51 IST" name="afterMethod" finished-at="2025-09-26T15:14:52 IST" duration-ms="1166" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a href="index.php?module=Users&amp;action=Logout" class="drop_down_usersettings">...</a> is not clickable at point (43, 12). Other element would receive the click: <img src="test/logo/vtiger-crm-logo.gif" alt="vtiger-crm-logo.gif" title="vtiger-crm-logo.gif" border="0" style="width: 15em;height: 4.2em;">
  (Session info: MicrosoftEdge=140.0.3485.81)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, clickElement {id=f.45573E7CC73A84593E09BC3E40FBB524.d.5656F4B3B11FC64EB2A581A37A76D00E.e.159}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: MicrosoftEdge on windows (79fc7719b388ce58e04d4f73cd0fb004)] -> link text: Sign Out]
Session ID: 79fc7719b388ce58e04d4f73cd0fb004]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a href="index.php?module=Users&amp;action=Logout" class="drop_down_usersettings">...</a> is not clickable at point (43, 12). Other element would receive the click: <img src="test/logo/vtiger-crm-logo.gif" alt="vtiger-crm-logo.gif" title="vtiger-crm-logo.gif" border="0" style="width: 15em;height: 4.2em;">
  (Session info: MicrosoftEdge=140.0.3485.81)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, clickElement {id=f.45573E7CC73A84593E09BC3E40FBB524.d.5656F4B3B11FC64EB2A581A37A76D00E.e.159}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: MicrosoftEdge on windows (79fc7719b388ce58e04d4f73cd0fb004)] -> link text: Sign Out]
Session ID: 79fc7719b388ce58e04d4f73cd0fb004
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:14:52 IST" name="beforeMethod" finished-at="2025-09-26T15:15:10 IST" duration-ms="17147" status="FAIL">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79fc7719b388ce58e04d4f73cd0fb004]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79fc7719b388ce58e04d4f73cd0fb004
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:584)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.UncheckedIOException: java.io.IOException: HTTP/1.1 header parser received no bytes
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:500)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.lambda$executeAsync$2(JdkHttpClient.java:387)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
... 4 more
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes
at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:586)
at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:123)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:459)
... 8 more
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes
at java.net.http/jdk.internal.net.http.common.Utils.wrapWithExtraDetail(Utils.java:348)
at java.net.http/jdk.internal.net.http.Http1Response$HeadersReader.onReadError(Http1Response.java:675)
at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.checkForErrors(Http1AsyncReceiver.java:302)
at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.flush(Http1AsyncReceiver.java:268)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$LockingRestartableTask.run(SequentialScheduler.java:205)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$CompleteRestartableTask.run(SequentialScheduler.java:149)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:230)
... 3 more
Caused by: java.net.SocketException: Connection reset
at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
at java.net.http/jdk.internal.net.http.SocketTube.readAvailable(SocketTube.java:1170)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.read(SocketTube.java:833)
at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowTask.run(SocketTube.java:181)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:230)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:303)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:256)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable(SocketTube.java:774)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent.signalEvent(SocketTube.java:957)
at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowEvent.handle(SocketTube.java:253)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.handleEvent(HttpClientImpl.java:979)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.lambda$run$3(HttpClientImpl.java:934)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.run(HttpClientImpl.java:934)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:15:10 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:15:10 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79fc7719b388ce58e04d4f73cd0fb004]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79fc7719b388ce58e04d4f73cd0fb004
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:584)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.UncheckedIOException: java.io.IOException: HTTP/1.1 header parser received no bytes
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:500)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.lambda$executeAsync$2(JdkHttpClient.java:387)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
... 4 more
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes
at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:586)
at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:123)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:459)
... 8 more
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes
at java.net.http/jdk.internal.net.http.common.Utils.wrapWithExtraDetail(Utils.java:348)
at java.net.http/jdk.internal.net.http.Http1Response$HeadersReader.onReadError(Http1Response.java:675)
at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.checkForErrors(Http1AsyncReceiver.java:302)
at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.flush(Http1AsyncReceiver.java:268)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$LockingRestartableTask.run(SequentialScheduler.java:205)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$CompleteRestartableTask.run(SequentialScheduler.java:149)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:230)
... 3 more
Caused by: java.net.SocketException: Connection reset
at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
at java.net.http/jdk.internal.net.http.SocketTube.readAvailable(SocketTube.java:1170)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.read(SocketTube.java:833)
at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowTask.run(SocketTube.java:181)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:230)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:303)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:256)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable(SocketTube.java:774)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent.signalEvent(SocketTube.java:957)
at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowEvent.handle(SocketTube.java:253)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.handleEvent(HttpClientImpl.java:979)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.lambda$run$3(HttpClientImpl.java:934)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.run(HttpClientImpl.java:934)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:15:10 IST" name="afterMethod" finished-at="2025-09-26T15:15:10 IST" duration-ms="4" status="FAIL">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79fc7719b388ce58e04d4f73cd0fb004]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.11'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [79fc7719b388ce58e04d4f73cd0fb004, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 140.0.3485.81, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:56089}, msedge: {msedgedriverVersion: 140.0.3485.81 (5f3674d4b466..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56089/devtoo..., se:cdpVersion: 140.0.3485.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79fc7719b388ce58e04d4f73cd0fb004
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:584)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:45)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:623)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.io.UncheckedIOException: java.net.ConnectException
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:500)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.lambda$executeAsync$2(JdkHttpClient.java:387)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
... 4 more
Caused by: java.net.ConnectException
at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:573)
at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:123)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:459)
... 8 more
Caused by: java.net.ConnectException
at java.net.http/jdk.internal.net.http.common.Utils.toConnectException(Utils.java:1055)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:198)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.checkRetryConnect(PlainHttpConnection.java:230)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$1(PlainHttpConnection.java:206)
at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)
... 3 more
Caused by: java.nio.channels.ClosedChannelException
at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:195)
at java.base/sun.nio.ch.SocketChannelImpl.beginConnect(SocketChannelImpl.java:760)
at java.base/sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:848)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.lambda$connectAsync$0(PlainHttpConnection.java:183)
at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
at java.net.http/jdk.internal.net.http.PlainHttpConnection.connectAsync(PlainHttpConnection.java:185)
... 9 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@1677d1]" started-at="2025-09-26T15:15:10 IST" name="afterClassMethod" finished-at="2025-09-26T15:15:10 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:20 IST" name="beforeClassMethod" finished-at="2025-09-26T15:15:22 IST" duration-ms="1201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:22 IST" name="beforeMethod" finished-at="2025-09-26T15:15:23 IST" duration-ms="1751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:23 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:15:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:23 IST" name="afterMethod" finished-at="2025-09-26T15:15:25 IST" duration-ms="1799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:25 IST" name="beforeMethod" finished-at="2025-09-26T15:15:26 IST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:26 IST" name="firstScenarioTest" finished-at="2025-09-26T15:15:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:26 IST" name="afterMethod" finished-at="2025-09-26T15:15:28 IST" duration-ms="1957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:28 IST" name="beforeMethod" finished-at="2025-09-26T15:15:29 IST" duration-ms="1004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:29 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:15:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:29 IST" name="afterMethod" finished-at="2025-09-26T15:15:31 IST" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@4313f5bc]" started-at="2025-09-26T15:15:31 IST" name="afterClassMethod" finished-at="2025-09-26T15:15:31 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:30 IST" name="beforeClassMethod" finished-at="2025-09-26T15:16:31 IST" duration-ms="1250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:31 IST" name="beforeMethod" finished-at="2025-09-26T15:16:34 IST" duration-ms="2454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:34 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:16:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:34 IST" name="afterMethod" finished-at="2025-09-26T15:16:36 IST" duration-ms="1835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:36 IST" name="beforeMethod" finished-at="2025-09-26T15:16:36 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:36 IST" name="firstScenarioTest" finished-at="2025-09-26T15:16:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:36 IST" name="afterMethod" finished-at="2025-09-26T15:16:39 IST" duration-ms="2842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:39 IST" name="beforeMethod" finished-at="2025-09-26T15:16:40 IST" duration-ms="994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:40 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:16:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:40 IST" name="afterMethod" finished-at="2025-09-26T15:16:42 IST" duration-ms="1885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@1f0f1111]" started-at="2025-09-26T15:16:42 IST" name="afterClassMethod" finished-at="2025-09-26T15:16:42 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:19 IST" name="beforeClassMethod" finished-at="2025-09-26T15:16:20 IST" duration-ms="1186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:20 IST" name="beforeMethod" finished-at="2025-09-26T15:16:22 IST" duration-ms="1745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:22 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:16:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:22 IST" name="afterMethod" finished-at="2025-09-26T15:16:24 IST" duration-ms="1826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:24 IST" name="beforeMethod" finished-at="2025-09-26T15:16:25 IST" duration-ms="981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:25 IST" name="firstScenarioTest" finished-at="2025-09-26T15:16:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:25 IST" name="afterMethod" finished-at="2025-09-26T15:16:27 IST" duration-ms="2061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:27 IST" name="beforeMethod" finished-at="2025-09-26T15:16:28 IST" duration-ms="988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:28 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:16:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:28 IST" name="afterMethod" finished-at="2025-09-26T15:16:30 IST" duration-ms="1995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@670002]" started-at="2025-09-26T15:16:30 IST" name="afterClassMethod" finished-at="2025-09-26T15:16:30 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:05 IST" name="beforeClassMethod" finished-at="2025-09-26T15:16:06 IST" duration-ms="1195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@55875126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:06 IST" name="beforeMethod" finished-at="2025-09-26T15:16:08 IST" duration-ms="1728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:08 IST" name="ScecondScenarioTest" finished-at="2025-09-26T15:16:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:08 IST" name="afterMethod" finished-at="2025-09-26T15:16:10 IST" duration-ms="1849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:10 IST" name="beforeMethod" finished-at="2025-09-26T15:16:11 IST" duration-ms="1008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:11 IST" name="firstScenarioTest" finished-at="2025-09-26T15:16:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:11 IST" name="afterMethod" finished-at="2025-09-26T15:16:13 IST" duration-ms="2030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:13 IST" name="beforeMethod" finished-at="2025-09-26T15:16:14 IST" duration-ms="1017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:14 IST" name="fourthScenarioTest" finished-at="2025-09-26T15:16:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:14 IST" name="afterMethod" finished-at="2025-09-26T15:16:16 IST" duration-ms="2065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:16 IST" name="beforeMethod" finished-at="2025-09-26T15:16:17 IST" duration-ms="1041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:17 IST" name="thirdScenarioTest" finished-at="2025-09-26T15:16:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:17 IST" name="afterMethod" finished-at="2025-09-26T15:16:19 IST" duration-ms="2126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@778d1062]" started-at="2025-09-26T15:16:19 IST" name="afterClassMethod" finished-at="2025-09-26T15:16:19 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- edgeSuit -->
  </suite> <!-- Suite -->
</testng-results>
