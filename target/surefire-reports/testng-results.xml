<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="26" failed="0" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-06T12:30:15 IST" name="Surefire suite" finished-at="2025-10-06T12:32:31 IST" duration-ms="136581">
    <groups>
      <group name="reg">
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@c267ef4]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@c267ef4]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@30ee2816]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@30ee2816]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- reg -->
      <group name="smoke">
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@c267ef4]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@30ee2816]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-10-06T12:30:15 IST" name="Surefire test" finished-at="2025-10-06T12:32:31 IST" duration-ms="136581">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:39 IST" name="beforeClassMethod" finished-at="2025-10-06T12:31:41 IST" duration-ms="1572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:41 IST" name="beforeMethod" finished-at="2025-10-06T12:31:43 IST" duration-ms="1878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:43 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:31:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:43 IST" name="afterMethod" finished-at="2025-10-06T12:31:45 IST" duration-ms="1756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:45 IST" name="beforeMethod" finished-at="2025-10-06T12:31:45 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:45 IST" name="firstScenarioTest" finished-at="2025-10-06T12:31:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:45 IST" name="afterMethod" finished-at="2025-10-06T12:31:48 IST" duration-ms="2976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:48 IST" name="beforeMethod" finished-at="2025-10-06T12:31:49 IST" duration-ms="1157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:49 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:31:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:49 IST" name="afterMethod" finished-at="2025-10-06T12:31:51 IST" duration-ms="2045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@5c30a9b0]" started-at="2025-10-06T12:31:51 IST" name="afterClassMethod" finished-at="2025-10-06T12:31:51 IST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:27 IST" name="beforeClassMethod" finished-at="2025-10-06T12:30:28 IST" duration-ms="1466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:28 IST" name="beforeMethod" finished-at="2025-10-06T12:30:30 IST" duration-ms="2002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:30 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:30:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:30 IST" name="afterMethod" finished-at="2025-10-06T12:30:32 IST" duration-ms="1614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:32 IST" name="beforeMethod" finished-at="2025-10-06T12:30:33 IST" duration-ms="1218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:33 IST" name="firstScenarioTest" finished-at="2025-10-06T12:30:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:33 IST" name="afterMethod" finished-at="2025-10-06T12:30:35 IST" duration-ms="1977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:35 IST" name="beforeMethod" finished-at="2025-10-06T12:30:36 IST" duration-ms="1100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:36 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:30:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:36 IST" name="afterMethod" finished-at="2025-10-06T12:30:38 IST" duration-ms="2223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@c267ef4]" started-at="2025-10-06T12:30:38 IST" name="afterClassMethod" finished-at="2025-10-06T12:30:39 IST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:28 IST" name="beforeClassMethod" finished-at="2025-10-06T12:31:29 IST" duration-ms="1323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:29 IST" name="beforeMethod" finished-at="2025-10-06T12:31:31 IST" duration-ms="1943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:31 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:31:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:31 IST" name="afterMethod" finished-at="2025-10-06T12:31:33 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:33 IST" name="beforeMethod" finished-at="2025-10-06T12:31:34 IST" duration-ms="1329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:34 IST" name="firstScenarioTest" finished-at="2025-10-06T12:31:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:34 IST" name="afterMethod" finished-at="2025-10-06T12:31:36 IST" duration-ms="1968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:36 IST" name="beforeMethod" finished-at="2025-10-06T12:31:37 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:37 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:31:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:37 IST" name="afterMethod" finished-at="2025-10-06T12:31:39 IST" duration-ms="1933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@635eaaf1]" started-at="2025-10-06T12:31:39 IST" name="afterClassMethod" finished-at="2025-10-06T12:31:39 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:39 IST" name="beforeClassMethod" finished-at="2025-10-06T12:30:40 IST" duration-ms="1418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:40 IST" name="beforeMethod" finished-at="2025-10-06T12:30:42 IST" duration-ms="1787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:42 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:30:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:42 IST" name="afterMethod" finished-at="2025-10-06T12:30:44 IST" duration-ms="1804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:44 IST" name="beforeMethod" finished-at="2025-10-06T12:30:45 IST" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:45 IST" name="firstScenarioTest" finished-at="2025-10-06T12:30:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:45 IST" name="afterMethod" finished-at="2025-10-06T12:30:47 IST" duration-ms="1862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:47 IST" name="beforeMethod" finished-at="2025-10-06T12:30:48 IST" duration-ms="1049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:48 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:30:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:48 IST" name="afterMethod" finished-at="2025-10-06T12:30:50 IST" duration-ms="1910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@30ee2816]" started-at="2025-10-06T12:30:50 IST" name="afterClassMethod" finished-at="2025-10-06T12:30:50 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:30:50 IST" name="beforeClassMethod" finished-at="2025-10-06T12:30:51 IST" duration-ms="1484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:30:51 IST" name="beforeMethod" finished-at="2025-10-06T12:30:53 IST" duration-ms="1921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:30:53 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:30:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:30:53 IST" name="afterMethod" finished-at="2025-10-06T12:31:08 IST" duration-ms="15123" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"Sign Out"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Sign Out"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=link text, value=Sign Out}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:08 IST" name="beforeMethod" finished-at="2025-10-06T12:31:23 IST" duration-ms="15040" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='user_name']"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='user_name']"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:23 IST" name="firstScenarioTest" finished-at="2025-10-06T12:31:23 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='user_name']"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='user_name']"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:23 IST" name="afterMethod" finished-at="2025-10-06T12:31:24 IST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:24 IST" name="beforeMethod" finished-at="2025-10-06T12:31:24 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:24 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:31:24 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='user_name']"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='user_name']"}
  (Session info: chrome=141.0.7390.54)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4c09fec3410eb0b85f61a0c2c616baf4, findElement {using=name, value=user_name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.54, chrome: {chromedriverVersion: 141.0.7390.54 (b95610d5c4a5..., userDataDir: C:\Users\KAIFKH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62782}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62782/devtoo..., se:cdpVersion: 141.0.7390.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4c09fec3410eb0b85f61a0c2c616baf4
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:24 IST" name="afterMethod" finished-at="2025-10-06T12:31:27 IST" duration-ms="3026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@31d7b7bf]" started-at="2025-10-06T12:31:27 IST" name="afterClassMethod" finished-at="2025-10-06T12:31:28 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:51 IST" name="beforeClassMethod" finished-at="2025-10-06T12:31:53 IST" duration-ms="1560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:53 IST" name="beforeMethod" finished-at="2025-10-06T12:31:55 IST" duration-ms="1873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:55 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:31:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:55 IST" name="afterMethod" finished-at="2025-10-06T12:31:56 IST" duration-ms="1842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:56 IST" name="beforeMethod" finished-at="2025-10-06T12:31:57 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:57 IST" name="firstScenarioTest" finished-at="2025-10-06T12:31:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:57 IST" name="afterMethod" finished-at="2025-10-06T12:31:59 IST" duration-ms="2981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:31:59 IST" name="beforeMethod" finished-at="2025-10-06T12:32:01 IST" duration-ms="1571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:32:01 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:32:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:32:01 IST" name="afterMethod" finished-at="2025-10-06T12:32:03 IST" duration-ms="2148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@1ddf84b8]" started-at="2025-10-06T12:32:03 IST" name="afterClassMethod" finished-at="2025-10-06T12:32:03 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:03 IST" name="beforeClassMethod" finished-at="2025-10-06T12:32:05 IST" duration-ms="1391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:05 IST" name="beforeMethod" finished-at="2025-10-06T12:32:05 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:05 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:32:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:05 IST" name="afterMethod" finished-at="2025-10-06T12:32:09 IST" duration-ms="4516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:09 IST" name="beforeMethod" finished-at="2025-10-06T12:32:10 IST" duration-ms="1025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:10 IST" name="firstScenarioTest" finished-at="2025-10-06T12:32:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:10 IST" name="afterMethod" finished-at="2025-10-06T12:32:13 IST" duration-ms="2114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:13 IST" name="beforeMethod" finished-at="2025-10-06T12:32:13 IST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:13 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:32:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:13 IST" name="afterMethod" finished-at="2025-10-06T12:32:16 IST" duration-ms="3077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@1139b2f3]" started-at="2025-10-06T12:32:16 IST" name="afterClassMethod" finished-at="2025-10-06T12:32:16 IST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeSuitMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:15 IST" name="beforeSuitMethod" finished-at="2025-10-06T12:30:15 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuitMethod -->
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:15 IST" name="beforeClassMethod" finished-at="2025-10-06T12:30:17 IST" duration-ms="2318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:17 IST" name="beforeMethod" finished-at="2025-10-06T12:30:19 IST" duration-ms="1772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:19 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:30:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:19 IST" name="afterMethod" finished-at="2025-10-06T12:30:20 IST" duration-ms="1667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:21 IST" name="beforeMethod" finished-at="2025-10-06T12:30:22 IST" duration-ms="1123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:22 IST" name="firstScenarioTest" finished-at="2025-10-06T12:30:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:22 IST" name="afterMethod" finished-at="2025-10-06T12:30:24 IST" duration-ms="1894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:24 IST" name="beforeMethod" finished-at="2025-10-06T12:30:25 IST" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:25 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:30:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:25 IST" name="afterMethod" finished-at="2025-10-06T12:30:27 IST" duration-ms="1916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:30:27 IST" name="afterClassMethod" finished-at="2025-10-06T12:30:27 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
        <test-method is-config="true" signature="afterSuitMethod()[pri:0, instance:module01.ClassOneTest@63355449]" started-at="2025-10-06T12:32:31 IST" name="afterSuitMethod" finished-at="2025-10-06T12:32:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuitMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:16 IST" name="beforeClassMethod" finished-at="2025-10-06T12:32:17 IST" duration-ms="1440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@a913a81b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:17 IST" name="beforeMethod" finished-at="2025-10-06T12:32:20 IST" duration-ms="2059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:20 IST" name="ScecondScenarioTest" finished-at="2025-10-06T12:32:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:20 IST" name="afterMethod" finished-at="2025-10-06T12:32:21 IST" duration-ms="1879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:21 IST" name="beforeMethod" finished-at="2025-10-06T12:32:22 IST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:22 IST" name="firstScenarioTest" finished-at="2025-10-06T12:32:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:22 IST" name="afterMethod" finished-at="2025-10-06T12:32:25 IST" duration-ms="2059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:25 IST" name="beforeMethod" finished-at="2025-10-06T12:32:25 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:25 IST" name="fourthScenarioTest" finished-at="2025-10-06T12:32:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:25 IST" name="afterMethod" finished-at="2025-10-06T12:32:28 IST" duration-ms="3056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:28 IST" name="beforeMethod" finished-at="2025-10-06T12:32:29 IST" duration-ms="1237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:29 IST" name="thirdScenarioTest" finished-at="2025-10-06T12:32:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:29 IST" name="afterMethod" finished-at="2025-10-06T12:32:31 IST" duration-ms="2060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@7a69b07]" started-at="2025-10-06T12:32:31 IST" name="afterClassMethod" finished-at="2025-10-06T12:32:31 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
