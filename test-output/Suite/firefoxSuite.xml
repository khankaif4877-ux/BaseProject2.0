<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="16" hostname="DESKTOP-N2HG8IN" failures="2" tests="2" name="firefoxSuite" time="6.431" errors="0" timestamp="2025-09-26T15:08:04 IST">
  <testcase classname="module02.ClassOneTest" name="ScecondScenarioTest" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentReports.createTest(String)&amp;quot; because &amp;quot;this.report&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentReports.createTest(String)" because "this.report" is null
at com.ProjectName.generic.ListnerUtil.ListenerImplimentation.onTestStart(ListenerImplimentation.java:51)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- ScecondScenarioTest -->
  <testcase classname="module02.ClassOneTest" name="ScecondScenarioTest" time="0.211">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, java.lang.Throwable)&amp;quot; because &amp;quot;this.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, java.lang.Throwable)" because "this.test" is null
at com.ProjectName.generic.ListnerUtil.ListenerImplimentation.onTestFailure(ListenerImplimentation.java:66)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- ScecondScenarioTest -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@AfterSuite afterSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuitMethod -->
  <testcase classname="com.ProjectName.generic.BaseClassUtil.BaseClass" name="@BeforeSuite beforeSuitMethod" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuitMethod -->
</testsuite> <!-- firefoxSuite -->
