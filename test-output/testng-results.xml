<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="84" passed="80" failed="0" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-26T17:09:50 IST" name="Suite" finished-at="2025-09-26T17:12:27 IST" duration-ms="157357">
    <groups>
      <group name="reg">
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@2cd76f31]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@2cd76f31]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@302552ec]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@302552ec]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@bcec361]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@bcec361]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@198b6731]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@198b6731]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@26794848]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@26794848]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@4e08711f]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@4e08711f]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@40005471]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@40005471]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@5c671d7f]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@5c671d7f]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@1757cd72]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@1757cd72]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@561b6512]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@561b6512]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@192c3f1e]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@192c3f1e]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@2e377400]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@2e377400]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@7494f96a]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@7494f96a]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@49e5f737]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@49e5f737]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@4c309d4d]" name="ScecondScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@4c309d4d]" name="thirdScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" name="ScecondScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" name="thirdScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" name="ScecondScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" name="thirdScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@687e99d8]" name="ScecondScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@687e99d8]" name="thirdScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" name="ScecondScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" name="thirdScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@e4487af]" name="ScecondScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@e4487af]" name="thirdScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@6aaceffd]" name="ScecondScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassOneTest.thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@6aaceffd]" name="thirdScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" name="ScecondScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassTwoTest.thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" name="thirdScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" name="ScecondScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" name="fourthScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassZeroTest.thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" name="thirdScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- reg -->
      <group name="smoke">
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@2cd76f31]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@302552ec]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@bcec361]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@198b6731]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@26794848]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@4e08711f]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@40005471]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@5c671d7f]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@1757cd72]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@561b6512]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@192c3f1e]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@2e377400]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@7494f96a]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@49e5f737]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module01.ClassOneTest@4c309d4d]" name="firstScenarioTest" class="module01.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" name="firstScenarioTest" class="module01.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" name="firstScenarioTest" class="module01.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module02.ClassOneTest@687e99d8]" name="firstScenarioTest" class="module02.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" name="firstScenarioTest" class="module02.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@e4487af]" name="firstScenarioTest" class="module02.ClassZeroTest"/>
        <method signature="ClassOneTest.firstScenarioTest()[pri:0, instance:module03.ClassOneTest@6aaceffd]" name="firstScenarioTest" class="module03.ClassOneTest"/>
        <method signature="ClassTwoTest.firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" name="firstScenarioTest" class="module03.ClassTwoTest"/>
        <method signature="ClassZeroTest.firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" name="firstScenarioTest" class="module03.ClassZeroTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-09-26T17:09:50 IST" name="chromeSuite" finished-at="2025-09-26T17:11:56 IST" duration-ms="126128">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:55 IST" duration-ms="5515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:09:55 IST" name="beforeMethod" finished-at="2025-09-26T17:10:02 IST" duration-ms="6871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:02 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:02 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:02 IST" name="afterMethod" finished-at="2025-09-26T17:10:13 IST" duration-ms="10909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:13 IST" name="beforeMethod" finished-at="2025-09-26T17:10:20 IST" duration-ms="6936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:20 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:20 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:20 IST" name="afterMethod" finished-at="2025-09-26T17:10:25 IST" duration-ms="5079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:25 IST" name="beforeMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="6435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:32 IST" name="afterMethod" finished-at="2025-09-26T17:10:36 IST" duration-ms="4538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@e4487af]" started-at="2025-09-26T17:10:36 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:44 IST" duration-ms="7814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:10:44 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:49 IST" duration-ms="4901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:10:49 IST" name="beforeMethod" finished-at="2025-09-26T17:11:00 IST" duration-ms="11311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:00 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:00 IST" name="afterMethod" finished-at="2025-09-26T17:11:08 IST" duration-ms="7360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:08 IST" name="beforeMethod" finished-at="2025-09-26T17:11:19 IST" duration-ms="11177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:19 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:19 IST" name="afterMethod" finished-at="2025-09-26T17:11:27 IST" duration-ms="8294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:27 IST" name="beforeMethod" finished-at="2025-09-26T17:11:32 IST" duration-ms="5102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:32 IST" name="afterMethod" finished-at="2025-09-26T17:11:35 IST" duration-ms="3020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@3af9c5b7]" started-at="2025-09-26T17:11:35 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:40 IST" duration-ms="4459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:10:44 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:47 IST" duration-ms="3659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:10:47 IST" name="beforeMethod" finished-at="2025-09-26T17:10:54 IST" duration-ms="6333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:10:54 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:10:54 IST" name="afterMethod" finished-at="2025-09-26T17:11:01 IST" duration-ms="7019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:01 IST" name="beforeMethod" finished-at="2025-09-26T17:11:06 IST" duration-ms="5197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:06 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:06 IST" name="afterMethod" finished-at="2025-09-26T17:11:15 IST" duration-ms="8811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:15 IST" name="beforeMethod" finished-at="2025-09-26T17:11:24 IST" duration-ms="9507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:24 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:24 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:24 IST" name="afterMethod" finished-at="2025-09-26T17:11:30 IST" duration-ms="6163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@10aa41f2]" started-at="2025-09-26T17:11:30 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:42 IST" duration-ms="11513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:58 IST" duration-ms="8250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:09:58 IST" name="beforeMethod" finished-at="2025-09-26T17:10:11 IST" duration-ms="13182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:11 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:11 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:11 IST" name="afterMethod" finished-at="2025-09-26T17:10:19 IST" duration-ms="7380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:19 IST" name="beforeMethod" finished-at="2025-09-26T17:10:24 IST" duration-ms="5482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:24 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:24 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:24 IST" name="afterMethod" finished-at="2025-09-26T17:10:31 IST" duration-ms="6624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:31 IST" name="beforeMethod" finished-at="2025-09-26T17:10:37 IST" duration-ms="5604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:37 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:37 IST" name="afterMethod" finished-at="2025-09-26T17:10:39 IST" duration-ms="2098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@c86b9e3]" started-at="2025-09-26T17:10:39 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:44 IST" duration-ms="4986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeSuitMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:09:50 IST" name="beforeSuitMethod" finished-at="2025-09-26T17:09:50 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuitMethod -->
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:58 IST" duration-ms="8064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:09:58 IST" name="beforeMethod" finished-at="2025-09-26T17:10:07 IST" duration-ms="8761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:07 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:07 IST" name="afterMethod" finished-at="2025-09-26T17:10:16 IST" duration-ms="8917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:16 IST" name="beforeMethod" finished-at="2025-09-26T17:10:22 IST" duration-ms="5918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:22 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:22 IST" name="afterMethod" finished-at="2025-09-26T17:10:26 IST" duration-ms="4790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:26 IST" name="beforeMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="6031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:32 IST" name="afterMethod" finished-at="2025-09-26T17:10:36 IST" duration-ms="3910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:10:36 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:07 IST" duration-ms="31062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
        <test-method is-config="true" signature="afterSuitMethod()[pri:0, instance:module02.ClassOneTest@687e99d8]" started-at="2025-09-26T17:12:27 IST" name="afterSuitMethod" finished-at="2025-09-26T17:12:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuitMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:58 IST" duration-ms="8294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:09:58 IST" name="beforeMethod" finished-at="2025-09-26T17:10:11 IST" duration-ms="13209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:11 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:11 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:11 IST" name="afterMethod" finished-at="2025-09-26T17:10:19 IST" duration-ms="7765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:19 IST" name="beforeMethod" finished-at="2025-09-26T17:10:25 IST" duration-ms="5307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:25 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:25 IST" name="afterMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="6941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:32 IST" name="beforeMethod" finished-at="2025-09-26T17:10:37 IST" duration-ms="5109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:37 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:37 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:37 IST" name="afterMethod" finished-at="2025-09-26T17:10:39 IST" duration-ms="2134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@6aaceffd]" started-at="2025-09-26T17:10:39 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:10 IST" duration-ms="31261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:39 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:43 IST" duration-ms="3269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:43 IST" name="beforeMethod" finished-at="2025-09-26T17:11:46 IST" duration-ms="3454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:46 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:46 IST" name="afterMethod" finished-at="2025-09-26T17:11:48 IST" duration-ms="2103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:48 IST" name="beforeMethod" finished-at="2025-09-26T17:11:50 IST" duration-ms="2056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:50 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:50 IST" name="afterMethod" finished-at="2025-09-26T17:11:52 IST" duration-ms="2163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:52 IST" name="beforeMethod" finished-at="2025-09-26T17:11:54 IST" duration-ms="1226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:54 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:54 IST" name="afterMethod" finished-at="2025-09-26T17:11:56 IST" duration-ms="2056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@4c309d4d]" started-at="2025-09-26T17:11:56 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:56 IST" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:10 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:17 IST" duration-ms="7353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:17 IST" name="beforeMethod" finished-at="2025-09-26T17:11:24 IST" duration-ms="6350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:24 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:24 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:24 IST" name="afterMethod" finished-at="2025-09-26T17:11:27 IST" duration-ms="3287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:27 IST" name="beforeMethod" finished-at="2025-09-26T17:11:29 IST" duration-ms="1951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:29 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:29 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:29 IST" name="afterMethod" finished-at="2025-09-26T17:11:32 IST" duration-ms="2589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:32 IST" name="beforeMethod" finished-at="2025-09-26T17:11:34 IST" duration-ms="2815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:34 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:34 IST" name="afterMethod" finished-at="2025-09-26T17:11:37 IST" duration-ms="2138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@ed7f8b4]" started-at="2025-09-26T17:11:37 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:39 IST" duration-ms="2883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:07 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:15 IST" duration-ms="7070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@3b4c327f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:15 IST" name="beforeMethod" finished-at="2025-09-26T17:11:22 IST" duration-ms="7107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:22 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:22 IST" name="afterMethod" finished-at="2025-09-26T17:11:28 IST" duration-ms="6519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:28 IST" name="beforeMethod" finished-at="2025-09-26T17:11:30 IST" duration-ms="1779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:30 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:30 IST" name="afterMethod" finished-at="2025-09-26T17:11:35 IST" duration-ms="5208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:35 IST" name="beforeMethod" finished-at="2025-09-26T17:11:37 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:37 IST" name="fourthScenarioTest" finished-at="2025-09-26T17:11:37 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:37 IST" name="afterMethod" finished-at="2025-09-26T17:11:39 IST" duration-ms="1966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:39 IST" name="beforeMethod" finished-at="2025-09-26T17:11:41 IST" duration-ms="1555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:41 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:41 IST" name="afterMethod" finished-at="2025-09-26T17:11:43 IST" duration-ms="2622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@37271612]" started-at="2025-09-26T17:11:43 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:44 IST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- chromeSuite -->
    <test started-at="2025-09-26T17:09:50 IST" name="edgeSuit" finished-at="2025-09-26T17:11:56 IST" duration-ms="126097">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:55 IST" duration-ms="5051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:09:55 IST" name="beforeMethod" finished-at="2025-09-26T17:09:59 IST" duration-ms="3742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:09:59 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:09:59 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:09:59 IST" name="afterMethod" finished-at="2025-09-26T17:10:04 IST" duration-ms="4837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:04 IST" name="beforeMethod" finished-at="2025-09-26T17:10:13 IST" duration-ms="9593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:13 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:13 IST" name="afterMethod" finished-at="2025-09-26T17:10:19 IST" duration-ms="5915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:19 IST" name="beforeMethod" finished-at="2025-09-26T17:10:24 IST" duration-ms="4519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:24 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:24 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:24 IST" name="afterMethod" finished-at="2025-09-26T17:10:28 IST" duration-ms="4315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@4b2bac3f]" started-at="2025-09-26T17:10:28 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:40 IST" duration-ms="12197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:44 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:47 IST" duration-ms="2905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:47 IST" name="beforeMethod" finished-at="2025-09-26T17:10:51 IST" duration-ms="4786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:51 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:51 IST" name="afterMethod" finished-at="2025-09-26T17:10:56 IST" duration-ms="4493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:56 IST" name="beforeMethod" finished-at="2025-09-26T17:10:59 IST" duration-ms="3392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:59 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:10:59 IST" name="afterMethod" finished-at="2025-09-26T17:11:03 IST" duration-ms="4125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:11:03 IST" name="beforeMethod" finished-at="2025-09-26T17:11:07 IST" duration-ms="3670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:11:07 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:11:07 IST" name="afterMethod" finished-at="2025-09-26T17:11:09 IST" duration-ms="2296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@302552ec]" started-at="2025-09-26T17:11:09 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:40 IST" duration-ms="30632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:40 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:43 IST" duration-ms="2890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:43 IST" name="beforeMethod" finished-at="2025-09-26T17:10:46 IST" duration-ms="2847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:46 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:46 IST" name="afterMethod" finished-at="2025-09-26T17:10:53 IST" duration-ms="6505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:53 IST" name="beforeMethod" finished-at="2025-09-26T17:10:55 IST" duration-ms="2350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:55 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:10:55 IST" name="afterMethod" finished-at="2025-09-26T17:11:02 IST" duration-ms="6662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:11:02 IST" name="beforeMethod" finished-at="2025-09-26T17:11:11 IST" duration-ms="9788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:11:11 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:11 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:11:11 IST" name="afterMethod" finished-at="2025-09-26T17:11:23 IST" duration-ms="11210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@26794848]" started-at="2025-09-26T17:11:23 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:41 IST" duration-ms="18009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:57 IST" duration-ms="7016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:09:57 IST" name="beforeMethod" finished-at="2025-09-26T17:10:05 IST" duration-ms="7819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:05 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:05 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:05 IST" name="afterMethod" finished-at="2025-09-26T17:10:14 IST" duration-ms="9062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:14 IST" name="beforeMethod" finished-at="2025-09-26T17:10:20 IST" duration-ms="6387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:20 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:20 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:20 IST" name="afterMethod" finished-at="2025-09-26T17:10:25 IST" duration-ms="4966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:25 IST" name="beforeMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="6810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:32 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:32 IST" name="afterMethod" finished-at="2025-09-26T17:10:36 IST" duration-ms="4127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@bcec361]" started-at="2025-09-26T17:10:36 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:07 IST" duration-ms="31078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:57 IST" duration-ms="6976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:09:57 IST" name="beforeMethod" finished-at="2025-09-26T17:10:05 IST" duration-ms="7782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:05 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:05 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:05 IST" name="afterMethod" finished-at="2025-09-26T17:10:15 IST" duration-ms="10210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:15 IST" name="beforeMethod" finished-at="2025-09-26T17:10:21 IST" duration-ms="5898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:21 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:21 IST" name="afterMethod" finished-at="2025-09-26T17:10:26 IST" duration-ms="4695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:26 IST" name="beforeMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="6405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:32 IST" name="afterMethod" finished-at="2025-09-26T17:10:36 IST" duration-ms="4099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@198b6731]" started-at="2025-09-26T17:10:36 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:08 IST" duration-ms="31251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:09:56 IST" duration-ms="6139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:09:56 IST" name="beforeMethod" finished-at="2025-09-26T17:10:00 IST" duration-ms="3483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:00 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:00 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:00 IST" name="afterMethod" finished-at="2025-09-26T17:10:09 IST" duration-ms="9197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:09 IST" name="beforeMethod" finished-at="2025-09-26T17:10:17 IST" duration-ms="8380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:17 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:17 IST" name="afterMethod" finished-at="2025-09-26T17:10:23 IST" duration-ms="6007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:23 IST" name="beforeMethod" finished-at="2025-09-26T17:10:29 IST" duration-ms="6077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:29 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:29 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:29 IST" name="afterMethod" finished-at="2025-09-26T17:10:35 IST" duration-ms="5625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@4e08711f]" started-at="2025-09-26T17:10:35 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:44 IST" duration-ms="8842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:40 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:43 IST" duration-ms="2756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:43 IST" name="beforeMethod" finished-at="2025-09-26T17:11:46 IST" duration-ms="3372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:46 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:46 IST" name="afterMethod" finished-at="2025-09-26T17:11:48 IST" duration-ms="2129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:48 IST" name="beforeMethod" finished-at="2025-09-26T17:11:50 IST" duration-ms="1833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:50 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:50 IST" name="afterMethod" finished-at="2025-09-26T17:11:52 IST" duration-ms="2101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:52 IST" name="beforeMethod" finished-at="2025-09-26T17:11:54 IST" duration-ms="1218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:54 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:54 IST" name="afterMethod" finished-at="2025-09-26T17:11:56 IST" duration-ms="2134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@2cd76f31]" started-at="2025-09-26T17:11:56 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:56 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:08 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:12 IST" duration-ms="4773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:12 IST" name="beforeMethod" finished-at="2025-09-26T17:11:16 IST" duration-ms="3124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:16 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:16 IST" name="afterMethod" finished-at="2025-09-26T17:11:21 IST" duration-ms="5700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:21 IST" name="beforeMethod" finished-at="2025-09-26T17:11:24 IST" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:24 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:24 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:24 IST" name="afterMethod" finished-at="2025-09-26T17:11:29 IST" duration-ms="5753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:29 IST" name="beforeMethod" finished-at="2025-09-26T17:11:32 IST" duration-ms="2638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:32 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:32 IST" name="afterMethod" finished-at="2025-09-26T17:11:35 IST" duration-ms="3376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@40005471]" started-at="2025-09-26T17:11:35 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:43 IST" duration-ms="7781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:07 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:13 IST" duration-ms="5904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@737a1390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:13 IST" name="beforeMethod" finished-at="2025-09-26T17:11:20 IST" duration-ms="7117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:20 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:20 IST" name="afterMethod" finished-at="2025-09-26T17:11:26 IST" duration-ms="5024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:26 IST" name="beforeMethod" finished-at="2025-09-26T17:11:31 IST" duration-ms="5510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:31 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:31 IST" name="afterMethod" finished-at="2025-09-26T17:11:35 IST" duration-ms="3668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:35 IST" name="beforeMethod" finished-at="2025-09-26T17:11:36 IST" duration-ms="1680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:36 IST" name="fourthScenarioTest" finished-at="2025-09-26T17:11:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:36 IST" name="afterMethod" finished-at="2025-09-26T17:11:39 IST" duration-ms="2205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:39 IST" name="beforeMethod" finished-at="2025-09-26T17:11:40 IST" duration-ms="1279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:40 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:40 IST" name="afterMethod" finished-at="2025-09-26T17:11:42 IST" duration-ms="2332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@3d285d7e]" started-at="2025-09-26T17:11:42 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:44 IST" duration-ms="1454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- edgeSuit -->
    <test started-at="2025-09-26T17:09:50 IST" name="firefoxSuite" finished-at="2025-09-26T17:12:27 IST" duration-ms="157357">
      <class name="module02.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:15 IST" duration-ms="25515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:15 IST" name="beforeMethod" finished-at="2025-09-26T17:10:18 IST" duration-ms="2575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:18 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:18 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:18 IST" name="afterMethod" finished-at="2025-09-26T17:10:26 IST" duration-ms="8087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:26 IST" name="beforeMethod" finished-at="2025-09-26T17:10:28 IST" duration-ms="1477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:28 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:28 IST" name="afterMethod" finished-at="2025-09-26T17:10:34 IST" duration-ms="6308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:34 IST" name="beforeMethod" finished-at="2025-09-26T17:10:34 IST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:34 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:34 IST" name="afterMethod" finished-at="2025-09-26T17:10:40 IST" duration-ms="5219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassZeroTest@26b3fd41]" started-at="2025-09-26T17:10:40 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:43 IST" duration-ms="3485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassZeroTest -->
      <class name="module01.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:10:43 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:57 IST" duration-ms="13535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:10:57 IST" name="beforeMethod" finished-at="2025-09-26T17:10:59 IST" duration-ms="2295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:10:59 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:10:59 IST" name="afterMethod" finished-at="2025-09-26T17:11:13 IST" duration-ms="13533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:13 IST" name="beforeMethod" finished-at="2025-09-26T17:11:16 IST" duration-ms="3697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:16 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:16 IST" name="afterMethod" finished-at="2025-09-26T17:11:27 IST" duration-ms="11062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:27 IST" name="beforeMethod" finished-at="2025-09-26T17:11:28 IST" duration-ms="769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:28 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:28 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:28 IST" name="afterMethod" finished-at="2025-09-26T17:11:36 IST" duration-ms="7660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassTwoTest@1757cd72]" started-at="2025-09-26T17:11:36 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:39 IST" duration-ms="3599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassTwoTest -->
      <class name="module02.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:10:39 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:50 IST" duration-ms="10968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:10:50 IST" name="beforeMethod" finished-at="2025-09-26T17:10:51 IST" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:10:51 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:51 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:10:51 IST" name="afterMethod" finished-at="2025-09-26T17:11:01 IST" duration-ms="9472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:01 IST" name="beforeMethod" finished-at="2025-09-26T17:11:01 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:01 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:01 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:01 IST" name="afterMethod" finished-at="2025-09-26T17:11:13 IST" duration-ms="12054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:13 IST" name="beforeMethod" finished-at="2025-09-26T17:11:16 IST" duration-ms="2782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:16 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:16 IST" name="afterMethod" finished-at="2025-09-26T17:11:25 IST" duration-ms="8545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassTwoTest@2e377400]" started-at="2025-09-26T17:11:25 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:38 IST" duration-ms="12893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassTwoTest -->
      <class name="module01.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:12 IST" duration-ms="21584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:12 IST" name="beforeMethod" finished-at="2025-09-26T17:10:12 IST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:12 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:12 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:12 IST" name="afterMethod" finished-at="2025-09-26T17:10:22 IST" duration-ms="10010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:22 IST" name="beforeMethod" finished-at="2025-09-26T17:10:23 IST" duration-ms="722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:23 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:23 IST" name="afterMethod" finished-at="2025-09-26T17:10:30 IST" duration-ms="7766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:30 IST" name="beforeMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="1457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:32 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:32 IST" name="afterMethod" finished-at="2025-09-26T17:10:38 IST" duration-ms="5946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassZeroTest@561b6512]" started-at="2025-09-26T17:10:38 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:44 IST" duration-ms="6138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassZeroTest -->
      <class name="module02.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:07 IST" duration-ms="16598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:07 IST" name="beforeMethod" finished-at="2025-09-26T17:10:07 IST" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:07 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:07 IST" name="afterMethod" finished-at="2025-09-26T17:10:10 IST" duration-ms="2887" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, clickElement {id=69ccfa89-35cf-4245-9e65-9b56d62bce07}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (ed198a39-0d77-4166-b758-80bfdf0e17be)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <img src="themes/softed/images/user.PNG"> could not be scrolled into view
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, clickElement {id=69ccfa89-35cf-4245-9e65-9b56d62bce07}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (ed198a39-0d77-4166-b758-80bfdf0e17be)] -> xpath: //img[@src='themes/softed/images/user.PNG']]
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:45)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:10 IST" name="beforeMethod" finished-at="2025-09-26T17:10:25 IST" duration-ms="15022" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:26 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:26 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:26 IST" name="afterMethod" finished-at="2025-09-26T17:10:27 IST" duration-ms="1224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:27 IST" name="beforeMethod" finished-at="2025-09-26T17:10:27 IST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:27 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:27 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [ed198a39-0d77-4166-b758-80bfdf0e17be, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28464, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: ed198a39-0d77-4166-b758-80bfdf0e17be
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:27 IST" name="afterMethod" finished-at="2025-09-26T17:10:32 IST" duration-ms="4662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module02.ClassOneTest@192c3f1e]" started-at="2025-09-26T17:10:32 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:39 IST" duration-ms="7488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module02.ClassOneTest -->
      <class name="module03.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:09:50 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:10 IST" duration-ms="20272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:10 IST" name="beforeMethod" finished-at="2025-09-26T17:10:14 IST" duration-ms="3513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:14 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:14 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:14 IST" name="afterMethod" finished-at="2025-09-26T17:10:24 IST" duration-ms="10136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:24 IST" name="beforeMethod" finished-at="2025-09-26T17:10:26 IST" duration-ms="1591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:26 IST" name="firstScenarioTest" finished-at="2025-09-26T17:10:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:26 IST" name="afterMethod" finished-at="2025-09-26T17:10:35 IST" duration-ms="9072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:35 IST" name="beforeMethod" finished-at="2025-09-26T17:10:35 IST" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:35 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:10:35 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:35 IST" name="afterMethod" finished-at="2025-09-26T17:10:40 IST" duration-ms="4918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassOneTest@7494f96a]" started-at="2025-09-26T17:10:40 IST" name="afterClassMethod" finished-at="2025-09-26T17:10:52 IST" duration-ms="12065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassOneTest -->
      <class name="module01.ClassOneTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:38 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:47 IST" duration-ms="9316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:47 IST" name="beforeMethod" finished-at="2025-09-26T17:11:47 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:47 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:47 IST" name="afterMethod" finished-at="2025-09-26T17:11:52 IST" duration-ms="4572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:52 IST" name="beforeMethod" finished-at="2025-09-26T17:11:52 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:52 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:52 IST" name="afterMethod" finished-at="2025-09-26T17:11:55 IST" duration-ms="3517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:55 IST" name="beforeMethod" finished-at="2025-09-26T17:11:55 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:55 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:55 IST" name="afterMethod" finished-at="2025-09-26T17:11:59 IST" duration-ms="3240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module01.ClassOneTest@5c671d7f]" started-at="2025-09-26T17:11:59 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:59 IST" duration-ms="840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module01.ClassOneTest -->
      <class name="module03.ClassTwoTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:10:52 IST" name="beforeClassMethod" finished-at="2025-09-26T17:11:05 IST" duration-ms="13100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:05 IST" name="beforeMethod" finished-at="2025-09-26T17:11:06 IST" duration-ms="775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:06 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:11:06 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:06 IST" name="afterMethod" finished-at="2025-09-26T17:11:11 IST" duration-ms="5328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:11 IST" name="beforeMethod" finished-at="2025-09-26T17:11:11 IST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:11 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:11 IST" name="afterMethod" finished-at="2025-09-26T17:11:22 IST" duration-ms="10200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:22 IST" name="beforeMethod" finished-at="2025-09-26T17:11:23 IST" duration-ms="1187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:23 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:11:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:23 IST" name="afterMethod" finished-at="2025-09-26T17:11:33 IST" duration-ms="10412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassTwoTest@49e5f737]" started-at="2025-09-26T17:11:33 IST" name="afterClassMethod" finished-at="2025-09-26T17:11:40 IST" duration-ms="6987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassTwoTest -->
      <class name="module03.ClassZeroTest">
        <test-method is-config="true" signature="beforeClassMethod(org.testng.xml.XmlTest)[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:10:44 IST" name="beforeClassMethod" finished-at="2025-09-26T17:10:57 IST" duration-ms="12536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@7a3dbf1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:10:57 IST" name="beforeMethod" finished-at="2025-09-26T17:10:57 IST" duration-ms="622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ScecondScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:10:57 IST" name="ScecondScenarioTest" finished-at="2025-09-26T17:10:57 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScecondScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:10:57 IST" name="afterMethod" finished-at="2025-09-26T17:11:02 IST" duration-ms="4995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:02 IST" name="beforeMethod" finished-at="2025-09-26T17:11:02 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="firstScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:02 IST" name="firstScenarioTest" finished-at="2025-09-26T17:11:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:02 IST" name="afterMethod" finished-at="2025-09-26T17:11:24 IST" duration-ms="22099" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=Sign Out, using=link text}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=Sign Out, using=link text}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:25 IST" name="beforeMethod" finished-at="2025-09-26T17:11:41 IST" duration-ms="16336" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fourthScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:41 IST" name="fourthScenarioTest" finished-at="2025-09-26T17:11:41 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourthScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:41 IST" name="afterMethod" finished-at="2025-09-26T17:11:57 IST" duration-ms="15923" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=Sign Out, using=link text}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: Sign Out
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=Sign Out, using=link text}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.click(Unknown Source)
at com.ProjectName.busuness.repository.HomePage.logoutFromApp(HomePage.java:46)
at com.ProjectName.generic.BaseClassUtil.BaseClass.afterMethod(BaseClass.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:623)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:11:57 IST" name="beforeMethod" finished-at="2025-09-26T17:12:12 IST" duration-ms="15024" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="thirdScenarioTest()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:12:12 IST" name="thirdScenarioTest" finished-at="2025-09-26T17:12:12 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name='user_name']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [25befc01-dbba-4423-8406-45cf4ac4f15d, findElement {value=user_name, using=name}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.1, moz:accessibilityChecks: false, moz:buildID: 20250918214338, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 28872, moz:profile: C:\Users\KAIFKH~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 25befc01-dbba-4423-8406-45cf4ac4f15d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.sendKeys(Unknown Source)
at com.ProjectName.busuness.repository.LoginPage.getLoginToApp(LoginPage.java:38)
at com.ProjectName.generic.BaseClassUtil.BaseClass.beforeMethod(BaseClass.java:104)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thirdScenarioTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:12:12 IST" name="afterMethod" finished-at="2025-09-26T17:12:26 IST" duration-ms="14622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:module03.ClassZeroTest@445b295b]" started-at="2025-09-26T17:12:26 IST" name="afterClassMethod" finished-at="2025-09-26T17:12:27 IST" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- module03.ClassZeroTest -->
    </test> <!-- firefoxSuite -->
  </suite> <!-- Suite -->
</testng-results>
